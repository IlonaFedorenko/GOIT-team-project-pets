{"version":3,"file":"static/js/543.b6ce2e33.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Background/Background.module.css?ea01","components/Background/Background.jsx","webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Logout/Logout.styled.jsx","components/Logout/Logout.jsx","components/UserForm/UserForm.styled.jsx","validation/userFormValidation.js","components/UserForm/UserForm.jsx","components/UserData/UserData.styled.jsx","components/UserData/UserData.jsx","pages/UserPage/UserPage.styled.jsx","components/PetsItem/PetsItem.jsx","components/PetsList/PetsList.jsx","components/PetsData/PetsData.jsx","pages/UserPage/UserPage.jsx","validation/authValidation.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__WcKDH\"};","import React from 'react';\n\nimport css from './Background.module.css';\n\nconst Background = () => {\n  return <div className={css.background}></div>;\n};\n\nexport default Background;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import { PropTypes } from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children, className }) => {\n  return <div className={`${css.container} ${className}`}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import styled from 'styled-components';\nimport { CiLogout } from 'react-icons/ci';\n\nexport const LogOutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.space[2] * 3 + 'px'};\n  margin: 21px 0 0 2px;\n\n  font-family: ${({ theme }) => theme.fonts.main.medium};\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.fontSizes[2]};\n  line-height: 1.35;\n  background: transparent;\n  border: none;\n  letter-spacing: 0.04em;\n  color: ${({ theme }) => theme.colors.grey};\n\n  transition: all 0.3s ease-in-out;\n  -webkit-transition: all 0.3s ease-in-out;\n  -moz-transition: all 0.3s ease-in-out;\n  -ms-transition: all 0.3s ease-in-out;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    margin: 13px 0 0;\n  }\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.blue};\n  }\n`;\n\nexport const IconExit = styled(CiLogout)`\n  fill: ${({ theme }) => theme.colors.blue};\n`;\n","import { useDispatch } from 'react-redux';\nimport { logout } from 'redux/auth/auth-operations';\nimport { IconExit, LogOutBtn } from './Logout.styled';\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <LogOutBtn type=\"button\" onClick={handleLogout}>\n      <IconExit />\n      <span>Log Out</span>\n    </LogOutBtn>\n  );\n};\n\nexport default Logout;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n// import { RxCross1 } from 'react-icons/rx';\nimport { ImCross } from 'react-icons/im';\nimport { FiEdit3 } from 'react-icons/fi';\nimport { BsCamera } from 'react-icons/bs';\nimport { BsCheck2 } from 'react-icons/bs';\n// import { BsCamera } from 'react-icons/bs';\nimport { theme } from 'theme/theme';\n\nexport const StylizedForm = styled(Form)`\n  @media screen and (min-width: ${({ theme }) =>\n      theme.breakpoints.tablet}) and (max-width: ${({ theme }) =>\n      theme.breakpoints.desktop}) {\n    width: 182px;\n    display: flex;\n    flex-direction: row-reverse;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n`;\n\nexport const EditIcon = styled.div`\n  display: block;\n  position: absolute;\n  top: 3%;\n  right: 3%;\n`;\n\nexport const Icon = styled(ImCross)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const IconEdit = styled(FiEdit3)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const IconCheckPhoto = styled(BsCheck2)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const UserInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const EditInpuButton = styled.div`\n  position: absolute;\n  overflow: visible;\n  right: ${({ theme }) => theme.space[2] * 3 + 'px'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${({ theme }) => theme.space[0] + 'px'};\n  margin: ${({ theme }) => theme.space[0] + 'px'};\n  background: transparent;\n  border: none;\n`;\n\nexport const ButtonSave = styled.button`\n  @media screen and (max-width: 767px) {\n    padding: 6px 0;\n    font-size: 14px;\n  }\n  @media screen and (min-width: ${({ theme }) =>\n      theme.breakpoints.tablet}) (max-width: 1279px) {\n    padding: 5px 0;\n    width: 255px;\n    font-size: 16px;\n  }\n  width: 100%;\n  gap: 8px;\n  padding: 11px 0;\n  margin-bottom: 24px;\n  color: #ffffff;\n  background-color: #54adff;\n  border-radius: 40px;\n  border: none;\n  outline: none;\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n\n  :hover {\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n  span {\n    font-size: 14px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: 0.04em;\n  color: #111111;\n\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  justify-content: space-between;\n  gap: 8px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: 18px;\n    line-height: 25px;\n  }\n\n  :not(:first-child) {\n    height: 32px;\n    width: 255px;\n    border: 1px solid ${theme.colors.blue};\n    border-radius: 20px;\n  }\n\n  /* div:nth-child(n) {\n    border: 1px solid transparent;\n  } */\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  width: 182px;\n  height: 182px;\n  object-fit: cover;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ${({ theme }) => theme.space[0] + 'px'};\n  margin-bottom: ${({ theme }) => theme.space[0] + 'px'};\n  border-radius: 40px;\n`;\n\nexport const IconEditPhoto = styled(BsCamera)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const EditPhotoWrap = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const AvatarSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  margin-bottom: 14px;\n`;\n\nexport const FormSection = styled.div`\n  @media screen and (max-width: 767px) {\n  }\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ErrorMessageStyled = styled.div`\n  color: red;\n`;\n","import * as Yup from 'yup';\n\nconst emailRegExp =\n  /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\n\nconst phoneRegExp = /^\\+\\d{2}\\d{3}\\d{3}\\d{2}\\d{2}$/;\n\nexport const validationSchema = Yup.object().shape({\n  avatar: Yup.mixed().test(\n    'fileSize',\n    'Image too large, max 3mb',\n    value => !value || (value && value.size <= 3000000)\n  ),\n  name: Yup.string().required('Name is required field'),\n  email: Yup.string()\n    .required('Email  is required field')\n    .matches(emailRegExp, 'Invalid email address'),\n  birthday: Yup.date()\n    .required('Enter a date of birth')\n    .min(new Date(1900, 0, 1))\n    .max(new Date(), \"You can't be born in the future!\"),\n  phone: Yup.string()\n    .required('Phone is required field')\n    .matches(phoneRegExp, 'Invalid phone number'),\n  city: Yup.string().required('City is required field'),\n});\n","import { Formik, Field } from 'formik';\nimport {\n  // Avatar,\n  // AvatarSection,\n  ButtonSave,\n  EditIcon,\n  EditInpuButton,\n  // EditPhotoWrap,\n  FormSection,\n  Icon,\n  IconEdit,\n  // IconEditPhoto,\n  Label,\n  StylizedForm,\n  UserInfoWrap,\n} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport { useState } from 'react';\n\n// import avatarDefault2x from '../../images/profile_img/Photo_default_2x.jpg';\nimport { updateUser } from 'redux/auth/auth-operations';\nimport { validationSchema } from 'validation';\n\nconst UserForm = ({ isEditing, toggleEdit }) => {\n  const user = useSelector(getUser);\n  const dispatch = useDispatch();\n  console.log(222, user);\n\n  // const [avatar, setAvatar] = useState(user.avatarURL || '');\n  const [name, setName] = useState(user.name || '');\n  const [email, setEmail] = useState(user.email || '');\n  const [birthday, setBirthday] = useState(user.birthday || '');\n  const [phone, setPhone] = useState(user.phone || '');\n  const [city, setCity] = useState(user.city || '');\n\n  const handleSubmit = (e, values) => {\n    // Перевіряємо, чи є помилки валідації\n\n    // const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(values.name);\n        break;\n      case 'email':\n        setEmail(values.email);\n        break;\n      case 'birthday':\n        setBirthday(values.birthday);\n        break;\n      case 'phone':\n        setPhone(values.phone);\n        break;\n      case 'city':\n        setCity(values.city);\n        break;\n      default:\n        break;\n    }\n\n    console.log('123', values);\n    dispatch(\n      updateUser({\n        avatarURL: 'khgk',\n        name: name,\n        email: email,\n        birthday: birthday,\n        phone: phone,\n        city: city,\n        // avatarURL: 'khgk',\n        // email: 'Tomas11@gmail.com',\n        // name: 'Tomas1199',\n        // phone: '+380671234567',\n        // city: 'Kharkov',\n        // birthday: '1990-11-19',\n      })\n    );\n  };\n\n  return (\n    <div>\n      <h1>Social Profiles</h1>\n      <Formik\n        initialValues={{\n          name: name || '',\n          email: email || '',\n          birthday: birthday || '',\n          phone: phone || '',\n          city: city || '',\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        <StylizedForm autoComplete=\"off\">\n          <EditIcon>\n            <EditInpuButton type=\"button\" onClick={toggleEdit}>\n              {isEditing ? <Icon /> : <IconEdit />}\n            </EditInpuButton>\n          </EditIcon>\n\n          <UserInfoWrap>\n            <FormSection>\n              <Label htmlFor=\"name\">\n                <span>Name:</span>\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  disabled={!isEditing}\n                  placeholder=\"Your name\"\n                />\n                {/* <ErrorMessage name=\"name\" component={ErrorMessageStyled} /> */}\n              </Label>\n              <Label htmlFor=\"email\">\n                <span>Email:</span>\n                <Field type=\"text\" name=\"email\" disabled={!isEditing} />\n              </Label>\n              <Label htmlFor=\"birthday\">\n                <span>Birthday:</span>\n                <Field type=\"text\" name=\"birthday\" disabled={!isEditing} />\n              </Label>\n              <Label htmlFor=\"birthday\">\n                <span>Phone:</span>\n                <Field type=\"text\" name=\"phone\" disabled={!isEditing} />\n              </Label>\n              <Label htmlFor=\"city\">\n                <span>City:</span>\n                <Field type=\"text\" name=\"city\" disabled={!isEditing} />\n              </Label>\n            </FormSection>\n            {isEditing ? <ButtonSave type=\"submit\">Save123</ButtonSave> : null}\n          </UserInfoWrap>\n        </StylizedForm>\n      </Formik>\n    </div>\n  );\n};\n\nexport default UserForm;\n","import styled from 'styled-components';\n\nexport const UserInfo = styled.div`\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n      display: block;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport UserForm from 'components/UserForm/UserForm';\nimport { UserInfo } from './UserData.styled';\n\nconst UserData = () => {\n  // const user = useSelector(getUser);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  return (\n    <>\n      <UserInfo>\n        {/* <div>\n          <Avatar src={avatarDefault2x || avatar} alt=\"avatar\" />\n          <img\n            src={avatarDefault2x || avatar}\n            alt=\"avatar\"\n            style={{ width: '50px', height: '50px' }}\n          />\n          <div>\n            <IconEditPhoto /> <span>Edit photo</span>\n          </div>\n        </div> */}\n        <UserForm isEditing={isEditing} toggleEdit={toggleEdit} />\n      </UserInfo>\n    </>\n  );\n};\n\nexport default UserData;\n","import { styled } from 'styled-components';\n\nexport const FormTitle = styled.h2`\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.fontSizes[3]};\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[5]};\n  }\n`;\n\nexport const UserCardWrap = styled.div`\n  position: relative;\n\n  padding-top: ${({ theme }) => theme.space[2] * 5 + 'px'};\n  padding-right: ${({ theme }) => theme.space[2] * 2 + 'px'};\n  padding-bottom: ${({ theme }) => theme.space[2] * 6 + 'px'};\n  padding-left: ${({ theme }) => theme.space[2] * 2 + 'px'};\n  background: #ffffff;\n  box-shadow: ${({ theme }) => theme.boxShadows.main};\n  border-radius: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    width: 704px;\n    padding-top: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    padding-right: 76px;\n    padding-bottom: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    padding-left: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    border-radius: 40px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    width: 395px;\n    height: 520px;\n    padding: ${({ theme }) => theme.space[2] * 5 + 'px'};\n  }\n`;\n","const PetsItem = () => {\n  return <></>;\n};\n\nexport default PetsItem;\n","import PetsItem from 'components/PetsItem/PetsItem';\n\nconst PetsList = () => {\n  return (\n    <>\n      <PetsItem></PetsItem>\n    </>\n  );\n};\n\nexport default PetsList;\n","import PetsList from 'components/PetsList/PetsList';\n\nconst PetsData = () => {\n  return <PetsList></PetsList>;\n};\n\nexport default PetsData;\n","import Logout from 'components/Logout/Logout';\nimport UserData from 'components/UserData/UserData';\nimport { FormTitle, UserCardWrap } from './UserPage.styled';\nimport Background from 'components/Background/Background';\nimport Container from 'components/Container/Container';\nimport PetsData from 'components/PetsData/PetsData';\n\nconst UserPage = () => {\n  return (\n    <Container>\n      <Background />\n      <FormTitle>My information:</FormTitle>\n      <UserCardWrap>\n        <UserData />\n        <Logout />\n      </UserCardWrap>\n      <PetsData></PetsData>\n    </Container>\n  );\n};\n\nexport default UserPage;\n","import * as Yup from 'yup';\n\nexport const registrationValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must be no more than 16 characters')\n    .matches(/^[A-Za-z]+$/, 'Name must contain only letters'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be no more than 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      'Must be at least one number, one lowercase and uppercase letter'\n    ),\n  confirmPassword: Yup.string()\n    .nullable()\n    .when('password', (password, schema) => {\n      return password\n        ? schema\n            .required('Password confirmation required')\n            .oneOf([Yup.ref('password')], 'Passwords must match')\n        : schema.notRequired();\n    }),\n});\n\nexport const loginValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(6, 'Password must be at least 6 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      'Must be at least one number, one lowercase and uppercase letter'\n    ),\n});\n"],"names":["_jsx","className","css","_ref","children","concat","LogOutBtn","styled","_templateObject","_taggedTemplateLiteral","theme","space","_ref2","fonts","main","medium","_ref3","fontSizes","_ref4","colors","grey","_ref5","breakpoints","tablet","_ref6","blue","IconExit","CiLogout","_templateObject2","_ref7","dispatch","useDispatch","_jsxs","type","onClick","logout","StylizedForm","Form","desktop","EditIcon","Icon","ImCross","_templateObject3","IconEdit","FiEdit3","_templateObject4","UserInfoWrap","BsCheck2","_templateObject5","_templateObject6","EditInpuButton","_templateObject7","ButtonSave","_templateObject8","Label","_templateObject9","_ref8","FormSection","_templateObject10","_ref9","_ref10","BsCamera","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","validationSchema","Yup","shape","avatar","test","value","size","name","required","email","matches","birthday","min","Date","max","phone","city","isEditing","toggleEdit","user","useSelector","getUser","console","log","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setEmail","_useState5","_useState6","setBirthday","_useState7","_useState8","setPhone","_useState9","_useState10","setCity","Formik","initialValues","onSubmit","e","values","updateUser","avatarURL","autoComplete","htmlFor","Field","disabled","placeholder","UserInfo","setIsEditing","_Fragment","UserForm","FormTitle","UserCardWrap","boxShadows","_ref11","_ref12","_ref13","_ref14","PetsItem","PetsList","Container","Background","UserData","Logout","PetsData","registrationValidationSchema","nullable","password","confirmPassword","when","schema","oneOf","notRequired","loginValidationSchema"],"sourceRoot":""}