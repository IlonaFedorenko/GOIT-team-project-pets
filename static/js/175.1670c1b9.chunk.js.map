{"version":3,"file":"static/js/175.1670c1b9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","validation/authValidation.js","webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","components/AuthForm/AuthForm.jsx","webpack://react-homework-template/./src/components/Background/Background.module.css?ea01","components/Background/Background.jsx","webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/Section/Section.jsx","pages/LoginPage/LoginPage.jsx","redux/auth/auth-selectors.js","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import React from 'react';\n\nimport css from './Button.module.css';\n\nconst Button = ({ children, className, onClick, type, ...props }) => {\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      className={`${css.button} ${className} `}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import * as Yup from 'yup';\n\nexport const registrationValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be no more than 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      'Must be at least one number, one lowercase and uppercase letter'\n    ),\n  confirmPassword: Yup.string()\n    .nullable()\n    .when('password', (password, schema) => {\n      return password\n        ? schema\n            .required('Password confirmation required')\n            .oneOf([Yup.ref('password')], 'Passwords must match')\n        : schema.notRequired();\n    }),\n});\n\nexport const loginValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(6, 'Password must be at least 6 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      'Must be at least one number, one lowercase and uppercase letter'\n    ),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"AuthForm_form__N+Fyz\",\"register\":\"AuthForm_register__LBbT3\",\"login\":\"AuthForm_login__nxTrt\",\"inputContainer\":\"AuthForm_inputContainer__44gmQ\",\"title\":\"AuthForm_title__nrVeh\",\"inputWrap\":\"AuthForm_inputWrap__t4Enc\",\"input\":\"AuthForm_input__dB7h2\",\"successInput\":\"AuthForm_successInput__oQ9qy\",\"errorInput\":\"AuthForm_errorInput__Pe3yE\",\"errorWrap\":\"AuthForm_errorWrap__0TYvv\",\"successMessage\":\"AuthForm_successMessage__Vl8si\",\"btnContainer\":\"AuthForm_btnContainer__hf1ao\",\"button\":\"AuthForm_button__+RFEI\",\"text\":\"AuthForm_text__iaP49\",\"link\":\"AuthForm_link__3I+HY\",\"eyeBtn\":\"AuthForm_eyeBtn__6eQZ4\",\"eyeIcon\":\"AuthForm_eyeIcon__4MRzf\",\"crossIcon\":\"AuthForm_crossIcon__ZrnyS\",\"confirmIcon\":\"AuthForm_confirmIcon__GT3ef\"};","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nimport Button from 'components/Button/Button';\n\nimport {\n  registrationValidationSchema,\n  loginValidationSchema,\n} from './../../validation/authValidation';\n\nimport { GoEyeClosed } from 'react-icons/go';\nimport { GoEye } from 'react-icons/go';\nimport { RxCross2 } from 'react-icons/rx';\nimport { BsCheck } from 'react-icons/bs';\n\nimport css from './AuthForm.module.css';\n\nconst AuthForm = ({ isRegister, onSubmit }) => {\n  const validationSchema = isRegister\n    ? registrationValidationSchema\n    : loginValidationSchema;\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [passworConfirmdVisible, setPasswordConfirmVisible] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const togglePasswordConfirmVisibility = () => {\n    setPasswordConfirmVisible(!passworConfirmdVisible);\n  };\n\n  const clearInput = (fieldName, setFieldValue) => {\n    setFieldValue(fieldName, '');\n  };\n\n  const hasFieldError = (errors, fieldName) => errors[fieldName];\n  const isFieldValid = (errors, fieldName) => !errors[fieldName];\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ isSubmitting, errors, touched, setFieldValue }) => (\n        <Form\n          className={`${css.form} ${isRegister ? css.register : css.login}`}\n        >\n          <div className={css.inputContainer}>\n            {isRegister ? (\n              <h2 className={css.title}>Registration</h2>\n            ) : (\n              <h2 className={css.title}>Login</h2>\n            )}\n            <div className={css.inputWrap}>\n              <label htmlFor=\"email\" hidden>\n                Email\n              </label>\n              <Field\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                className={`${css.input} ${\n                  touched.email && errors.email && css.errorInput\n                }`}\n              />\n              {touched.email && hasFieldError(errors, 'email') && (\n                <RxCross2\n                  id=\"svg\"\n                  className={css.crossIcon}\n                  onClick={() => clearInput('email', setFieldValue)}\n                />\n              )}\n              {touched.email && isFieldValid(errors, 'email') && (\n                <BsCheck id=\"svg\" className={css.confirmIcon} />\n              )}\n            </div>\n            <div className={css.errorWrap}>\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={css.error}\n              />\n            </div>\n            <div className={css.inputWrap}>\n              <label htmlFor=\"password\" hidden>\n                Password\n              </label>\n              <Field\n                id=\"password\"\n                type={passwordVisible ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Password\"\n                className={`${css.input} ${\n                  touched.password && !errors.password && css.successInput\n                } ${touched.password && errors.password && css.errorInput}`}\n              />\n              {passwordVisible ? (\n                <button\n                  type=\"button\"\n                  onClick={togglePasswordVisibility}\n                  className={css.eyeBtn}\n                >\n                  <GoEye id=\"svg\" className={css.eyeIcon} />\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  onClick={togglePasswordVisibility}\n                  className={css.eyeBtn}\n                >\n                  <GoEyeClosed id=\"svg\" className={css.eyeIcon} />\n                </button>\n              )}\n              {touched.password && !errors.password ? (\n                <div className={css.successMessage}>Password is secure</div>\n              ) : (\n                <div className={css.errorWrap}>\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className={css.error}\n                  />\n                </div>\n              )}\n            </div>\n            {isRegister && (\n              <div className={css.inputWrap}>\n                <label htmlFor=\"confirmPassword\" hidden>\n                  Confirm password\n                </label>\n                <Field\n                  id=\"confirmPassword\"\n                  type={passworConfirmdVisible ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  className={`${css.input} ${\n                    touched.confirmPassword &&\n                    !errors.confirmPassword &&\n                    css.successInput\n                  } ${\n                    touched.confirmPassword &&\n                    errors.confirmPassword &&\n                    css.errorInput\n                  }`}\n                />\n                {passworConfirmdVisible ? (\n                  <button\n                    type=\"button\"\n                    onClick={togglePasswordConfirmVisibility}\n                    className={css.eyeBtn}\n                  >\n                    <GoEye id=\"svg\" className={css.eyeIcon} />\n                  </button>\n                ) : (\n                  <button\n                    type=\"button\"\n                    onClick={togglePasswordConfirmVisibility}\n                    className={css.eyeBtn}\n                  >\n                    <GoEyeClosed id=\"svg\" className={css.eyeIcon} />\n                  </button>\n                )}\n                <div className={css.errorWrap}>\n                  <ErrorMessage\n                    name=\"confirmPassword\"\n                    component=\"div\"\n                    className={css.error}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n          <div className={css.btnContainer}>\n            <Button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className={css.button}\n            >\n              {isRegister ? 'Registration' : 'Login'}\n            </Button>\n            {isRegister ? (\n              <p className={css.text}>\n                Already have an account?{' '}\n                <Link to=\"/login\" className={css.link}>\n                  Login\n                </Link>\n              </p>\n            ) : (\n              <p className={css.text}>\n                Don't have an account?{' '}\n                <Link to=\"/register\" className={css.link}>\n                  Register\n                </Link>\n              </p>\n            )}\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__WcKDH\"};","import React from 'react';\n\nimport css from './Background.module.css';\n\nconst Background = () => {\n  return <div className={css.background}></div>;\n};\n\nexport default Background;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import { PropTypes } from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children, className }) => {\n  return <div className={`${css.container} ${className}`}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { PropTypes } from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ children, className }) => {\n  return <div className={`${css.section} ${className}`}>{children}</div>;\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Background from 'components/Background/Background';\nimport AuthForm from 'components/AuthForm/AuthForm';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container/Container';\nimport { login } from 'redux/auth/auth-operations';\nimport { useNavigate } from 'react-router-dom';\nimport { isUserLogin, isLoading, checkError } from 'redux/auth/auth-selectors';\n// import Loader from 'components/Loader/Loader';\n\nimport css from '../../components/Section/Section.module.css';\n\nexport const LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const error = useSelector(checkError);\n  const loading = useSelector(isLoading);\n\n  const handleLogin = async ({ email, password }, { setSubmitting }) => {\n    const data = { email, password };\n    try {\n      dispatch(login(data));\n    } catch (error) {}\n    setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (isLogin) {\n      navigate('/user', { state: { from: '/login' } });\n    }\n  }, [isLogin, navigate]);\n\n  if (loading && !error) {\n    // return <Loader />;\n  }\n\n  return (\n    <Section className={css.sectionlogin}>\n      <Background />\n      <Container>\n        <AuthForm onSubmit={handleLogin} />\n      </Container>\n    </Section>\n  );\n};\n\nexport default LoginPage;\n","export const isUserLogin = ({ auth }) => auth.isLogin;\n\nexport const getUser = ({ auth }) => auth.user;\n\nexport const getToken = ({ auth }) => auth.token;\n\nexport const checkError = ({ auth }) => auth.error;\n\nexport const isLoading = ({ auth }) => auth.isLoading;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"sectionlogin\":\"Section_sectionlogin__Bu46X\",\"sectionRegister\":\"Section_sectionRegister__aDA4N\"};"],"names":["_ref","children","className","onClick","type","_objectWithoutProperties","_excluded","_jsx","concat","css","registrationValidationSchema","Yup","shape","email","required","password","nullable","min","max","matches","confirmPassword","when","schema","oneOf","notRequired","loginValidationSchema","isRegister","onSubmit","validationSchema","_useState","useState","_useState2","_slicedToArray","passwordVisible","setPasswordVisible","_useState3","_useState4","passworConfirmdVisible","setPasswordConfirmVisible","togglePasswordVisibility","togglePasswordConfirmVisibility","hasFieldError","errors","fieldName","isFieldValid","Formik","initialValues","_ref2","isSubmitting","touched","setFieldValue","_jsxs","Form","htmlFor","hidden","Field","id","name","placeholder","RxCross2","clearInput","BsCheck","ErrorMessage","component","GoEye","GoEyeClosed","Button","disabled","Link","to","isLogin","useSelector","isUserLogin","navigate","useNavigate","dispatch","useDispatch","handleLogin","checkError","isLoading","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","setSubmitting","data","wrap","_context","prev","next","login","error","stop","_x","_x2","apply","arguments","useEffect","state","from","Section","Background","Container","AuthForm","auth","_ref4","_ref5"],"sourceRoot":""}