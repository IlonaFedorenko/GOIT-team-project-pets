{"version":3,"file":"static/js/625.6b9c9fa3.chunk.js","mappings":"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","sources":["components/UserCard/UserCard.styled.jsx","components/Logout/Logout.styled.jsx","components/Logout/Logout.jsx","components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","components/UserData/UserData.styled.jsx","components/UserData/UserData.jsx","pages/UserPage/UserPage.styled.jsx","pages/UserPage/UserPage.jsx"],"sourcesContent":["// import { Form } from 'formik';\nimport styled from 'styled-components';\n// import { RxCross1 } from 'react-icons/rx';\n// import { ImCross } from 'react-icons/im';\n// import { FiEdit3 } from 'react-icons/fi';\n// import { theme } from 'theme/theme';\n\n// export const UserInfo = styled.div`\n//   @media screen and min-width: 480px {\n//     display: flex;\n//     flex-direction: row-reverse;\n//     justify-content: space-between;\n//     @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n//       display: block;\n//     }\n//   }\n// `;\n\n// export const StylizedForm = styled(Form)`\n//   @media screen and (min-width: ${({ theme }) =>\n//       theme.breakpoints.tablet}) max-width: ${({ theme }) =>\n//       theme.breakpoints.desktop} {\n//     width: 182px;\n//   }\n// `;\n\nexport const FormTitle = styled.h2`\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.fontSizes[3]};\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[5]};\n  }\n`;\n\nexport const LabelField = styled.div`\n  display: flex;\n`;\n\nexport const LogOutBtn = styled.button``;\n","import styled from 'styled-components';\nimport { CiLogout } from 'react-icons/ci';\n\nexport const IconExit = styled(CiLogout)``;\n","import { LogOutBtn } from 'components/UserCard/UserCard.styled';\nimport { useDispatch } from 'react-redux';\nimport { logout } from 'redux/auth/auth-operations';\nimport { IconExit } from './Logout.styled';\n\nconst Logout = ({ onClick }) => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(logout());\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <LogOutBtn type=\"button\" onClick={handleLogout}>\n      <IconExit />\n      <span>Log out</span>\n    </LogOutBtn>\n  );\n};\n\nexport default Logout;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n// import { RxCross1 } from 'react-icons/rx';\nimport { ImCross } from 'react-icons/im';\nimport { FiEdit3 } from 'react-icons/fi';\nimport { BsCamera } from 'react-icons/bs';\nimport { BsCheck2 } from 'react-icons/bs';\n// import { BsCamera } from 'react-icons/bs';\nimport { theme } from 'theme/theme';\n\nexport const StylizedForm = styled(Form)`\n  @media screen and (min-width: ${({ theme }) =>\n      theme.breakpoints.tablet}) and (max-width: ${({ theme }) =>\n      theme.breakpoints.desktop}) {\n    width: 182px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n`;\n\nexport const EditIcon = styled.div`\n  display: block;\n  position: absolute;\n  top: 3%;\n  right: 3%;\n`;\n\nexport const Icon = styled(ImCross)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const IconEdit = styled(FiEdit3)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const IconCheckPhoto = styled(BsCheck2)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\n// export const IconCheckPhoto = styled(BsCheck2)``;\n\nexport const EditInpuButton = styled.div`\n  position: absolute;\n  overflow: visible;\n  right: ${({ theme }) => theme.space[2] * 3 + 'px'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${({ theme }) => theme.space[0] + 'px'};\n  margin: ${({ theme }) => theme.space[0] + 'px'};\n  background: transparent;\n  border: none;\n`;\n\nexport const ButtonSave = styled.button``;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: 0.04em;\n  color: #111111;\n\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  justify-content: space-between;\n  gap: 8px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: 18px;\n    line-height: 25px;\n  }\n\n  :not(:first-child) {\n    height: 32px;\n    width: 255px;\n    border: 1px solid ${theme.colors.blue};\n    border-radius: 20px;\n  }\n\n  /* div:nth-child(n) {\n    border: 1px solid transparent;\n  } */\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  width: 182px;\n  height: 182px;\n  object-fit: cover;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ${({ theme }) => theme.space[0] + 'px'};\n  margin-bottom: ${({ theme }) => theme.space[0] + 'px'};\n  border-radius: 40px;\n`;\n\nexport const IconEditPhoto = styled(BsCamera)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const EditPhotoWrap = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const AvatarSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  margin-bottom: 14px;\n`;\n\nexport const FormSection = styled.div`\n  /* @media screen and (min-width: ${({ theme }) =>\n    theme.breakpoints.desktop}) {\n    \n  } */\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { Formik, Field } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport * as Yup from 'yup';\nimport {\n  ButtonSave,\n  EditIcon,\n  EditInpuButton,\n  IconEdit,\n  Icon,\n  Label,\n  StylizedForm,\n  Avatar,\n  IconEditPhoto,\n  AvatarSection,\n  EditPhotoWrap,\n  FormSection,\n} from './UserForm.styled';\nimport Notiflix from 'notiflix';\n\nimport avatarDefault2x from '../../images/profile_img/Photo_default_2x.jpg';\n\nimport { updateUser } from 'redux/auth/auth-operations';\n\nconst emailRegExp =\n  /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\n\nconst phoneRegExp = /^\\+\\d{2}\\d{3}\\d{3}\\d{2}\\d{2}$/;\n\nconst validationSchema = Yup.object().shape({\n  avatar: Yup.mixed().test(\n    'fileSize',\n    'Image too large, max 3mb',\n    value => !value || (value && value.size <= 3000000)\n  ),\n  name: Yup.string().required('Name is required field'),\n  email: Yup.string()\n    .required('Email  is required field')\n    .matches(emailRegExp, 'Invalid email address'),\n  birthday: Yup.date()\n    .required('Enter a date of birth')\n    .min(new Date(1900, 0, 1))\n    .max(new Date(), \"You can't be born in the future!\"),\n  phone: Yup.string()\n    .required('Phone is required field')\n    .matches(phoneRegExp, 'Invalid phone number'),\n  city: Yup.string().required('City is required field'),\n});\n\nconst UserForm = ({ isEditing, toggleEdit }) => {\n  // ...\n  // const initialState = {\n  //   avatar: null,\n  //   name: '',\n  //   email: '',\n  //   birthday: '',\n  //   phone: '',\n  //   city: '',\n  // };\n\n  const dispatch = useDispatch();\n  const user = useSelector(getUser);\n\n  const [avatar, setAvatar] = useState(user.avatar || avatarDefault2x);\n  const [name, setName] = useState(user.name || '');\n  const [email, setEmail] = useState(user.email || '');\n  const [birthday, setBirthday] = useState(user.birthday || '');\n  const [phone, setPhone] = useState(user.phone || '');\n  const [city, setCity] = useState(user.city || '');\n\n  useEffect(() => {\n    setAvatar(user.avatar || avatarDefault2x);\n    setName(user.name || '');\n    setEmail(user.email || '');\n    setBirthday(user.birthday || '');\n    setPhone(user.phone || '');\n    setCity(user.city || '');\n  }, [user]);\n\n  // const toggleEdit = () => {\n  //   setIsEditing(!isEditing);\n  // };\n\n  const handleSubmit = (values, { errors, touched }) => {\n    // Перевіряємо, чи є помилки валідації\n    console.log(values);\n    const errorFields = Object.keys(errors)\n      .filter(key => touched[key])\n      .map(key => errors[key]);\n\n    if (errorFields.length > 0) {\n      // Якщо є помилки, показуємо їх\n      Notiflix.Notify.failure(errorFields.join('\\n'));\n    } else {\n      // Якщо помилок немає, оновлюємо стан та диспатчимо дію\n      setAvatar(values.avatar);\n      setName(values.name);\n      setEmail(values.email);\n      setBirthday(values.birthday);\n      setPhone(values.phone);\n      setCity(values.city);\n\n      dispatch(\n        updateUser({\n          avatar: values.avatar,\n          name: values.name,\n          email: values.email,\n          birthday: values.birthday,\n          phone: values.phone,\n          city: values.city,\n        })\n      );\n    }\n  };\n  // const [icon, setIcon] = React.useState(false);\n\n  // const toggleIcon = () => {\n  //   setIcon(prevIcon => !prevIcon);\n  // };\n\n  return (\n    <Formik\n      initialValues={{\n        avatar: avatar,\n        name: name,\n        email: email,\n        birthday: birthday,\n        phone: phone,\n        city: city,\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={validationSchema}\n    >\n      {({ errors, touched, isSubmitting, setFieldValue }) => (\n        <StylizedForm autoComplete=\"off\">\n          <EditIcon>\n            <EditInpuButton type=\"button\" onClick={toggleEdit}>\n              {isEditing ? <Icon /> : <IconEdit />}\n            </EditInpuButton>\n          </EditIcon>\n          <Label htmlFor=\"avatar\">\n            {/* <input\n              id=\"avatar\"\n              name=\"avatar\"\n              type=\"file\"\n              onChange={event => {\n                setFieldValue('avatar', event.currentTarget.files[0]);\n              }}\n              disabled={!isEditing}\n            /> */}\n            <AvatarSection>\n              <Avatar src={avatar} alt=\"avatar\" />\n              <EditPhotoWrap style={{ border: 'none' }}>\n                {isEditing ? (\n                  <>\n                    <IconEditPhoto /> <span>Edit photo</span>\n                  </>\n                ) : (\n                  <>{/* <IconCheckPhoto /> <span>Confirm</span> */}</>\n                )}\n              </EditPhotoWrap>\n            </AvatarSection>\n          </Label>\n          <FormSection>\n            <Label htmlFor=\"name\">\n              <span>Name:</span>\n              <Field\n                type=\"text\"\n                name=\"name\"\n                disabled={!isEditing}\n                placeholder=\"123\"\n              />\n            </Label>\n\n            <Label htmlFor=\"email\">\n              <span>Email:</span>\n              <Field type=\"text\" name=\"email\" disabled={!isEditing} />\n            </Label>\n            <Label htmlFor=\"birthday\">\n              <span>Birthday:</span>\n              <Field type=\"text\" name=\"birthday\" disabled={!isEditing} />\n            </Label>\n            <Label htmlFor=\"birthday\">\n              <span>Phone:</span>\n              <Field type=\"text\" name=\"phone\" disabled={!isEditing} />\n            </Label>\n            <Label htmlFor=\"city\">\n              <span>City:</span>\n              <Field type=\"text\" name=\"city\" disabled={!isEditing} />\n            </Label>\n          </FormSection>\n          {isEditing ? (\n            <ButtonSave type=\"submit\" disabled={isSubmitting}>\n              Save\n            </ButtonSave>\n          ) : null}\n        </StylizedForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserForm;\n","import styled from 'styled-components';\n\nexport const UserInfo = styled.div`\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n      display: block;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport UserForm from 'components/UserForm/UserForm';\nimport { UserInfo } from './UserData.styled';\n\nconst UserData = () => {\n  // const user = useSelector(getUser);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  return (\n    <>\n      <UserInfo>\n        {/* <div>\n          <Avatar src={avatarDefault2x || avatar} alt=\"avatar\" />\n          <img\n            src={avatarDefault2x || avatar}\n            alt=\"avatar\"\n            style={{ width: '50px', height: '50px' }}\n          />\n          <div>\n            <IconEditPhoto /> <span>Edit photo</span>\n          </div>\n        </div> */}\n        <UserForm isEditing={isEditing} toggleEdit={toggleEdit} />\n      </UserInfo>\n    </>\n  );\n};\n\nexport default UserData;\n","import { styled } from 'styled-components';\n\nexport const FormTitle = styled.h2`\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.fontSizes[3]};\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[5]};\n  }\n`;\n\nexport const UserCardWrap = styled.div`\n  position: relative;\n\n  padding-top: ${({ theme }) => theme.space[2] * 5 + 'px'};\n  padding-right: ${({ theme }) => theme.space[2] * 2 + 'px'};\n  padding-bottom: ${({ theme }) => theme.space[2] * 6 + 'px'};\n  padding-left: ${({ theme }) => theme.space[2] * 2 + 'px'};\n  background: #ffffff;\n  box-shadow: ${({ theme }) => theme.boxShadows.main};\n  border-radius: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    width: 704px;\n    padding-top: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    padding-right: 76px;\n    padding-bottom: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    padding-left: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    border-radius: 40px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    width: 395px;\n    height: 520px;\n    padding: ${({ theme }) => theme.space[2] * 5 + 'px'};\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport Logout from 'components/Logout/Logout';\nimport UserData from 'components/UserData/UserData';\nimport { FormTitle, UserCardWrap } from './UserPage.styled';\nimport { logout } from 'redux/auth/auth-operations';\n\nconst UserPage = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate('/');\n  };\n\n  return (\n    <>\n      <FormTitle>My information:</FormTitle>\n      <UserCardWrap>\n        <UserData />\n        <Logout onClick={handleLogout} />\n      </UserCardWrap>\n    </>\n  );\n};\n\nexport default UserPage;\n"],"names":["LogOutBtn","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","fontSizes","_ref2","breakpoints","tablet","_ref3","_templateObject2","_templateObject3","IconExit","CiLogout","onClick","dispatch","useDispatch","_jsxs","type","logout","children","_jsx","StylizedForm","Form","desktop","EditIcon","Icon","ImCross","IconEdit","FiEdit3","_templateObject4","EditInpuButton","BsCheck2","_templateObject5","_templateObject6","_ref4","space","_ref5","_ref6","ButtonSave","_templateObject7","Label","_templateObject8","_ref7","Avatar","_templateObject9","_ref8","_ref9","IconEditPhoto","BsCamera","_templateObject10","EditPhotoWrap","_templateObject11","AvatarSection","_templateObject12","FormSection","_templateObject13","_ref10","validationSchema","Yup","shape","avatar","test","value","size","name","required","email","matches","birthday","min","Date","max","phone","city","isEditing","toggleEdit","user","useSelector","getUser","_useState","useState","avatarDefault2x","_useState2","_slicedToArray","setAvatar","_useState3","_useState4","setName","_useState5","_useState6","setEmail","_useState7","_useState8","setBirthday","_useState9","_useState10","setPhone","_useState11","_useState12","setCity","useEffect","Formik","initialValues","onSubmit","values","errors","touched","console","log","errorFields","Object","keys","filter","key","map","length","Notiflix","join","updateUser","isSubmitting","setFieldValue","autoComplete","htmlFor","src","alt","style","border","_Fragment","Field","disabled","placeholder","UserInfo","setIsEditing","UserForm","FormTitle","UserCardWrap","boxShadows","main","_ref11","_ref12","_ref13","_ref14","navigate","useNavigate","UserData","Logout"],"sourceRoot":""}