{"version":3,"file":"static/js/72.87d5a4f8.chunk.js","mappings":"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","sources":["components/AddPet/PersonalDetails/PersonalDetails.styled.jsx","components/AddPet/PersonalDetails/PersonalDetails.jsx","components/AddPet/ChooseOption/ChooseOption.styled.jsx","components/AddPet/ChooseOption/ChooseOption.jsx","components/AddPet/MoreInfo/MoreInfo.styled.jsx","components/AddPet/MoreInfo/MoreInfo.jsx","components/AddPet/AddPetForm.styled.jsx","components/AddPet/validationSchema.jsx","components/AddPet/AddPetForm.jsx","pages/AddPetPage/AddPetPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const PersonalDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: ${props => (props.category === 'your pet' ? 44 : 24)}px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: #111111;\n\n  > div {\n    position: absolute;\n    bottom: -15px;\n    left: 20px;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: calc(16 / 12);\n    color: #f43f5e;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 9px 15px;\n  margin-top: 4px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n\n  outline: none;\n  border-radius: 40px;\n  border: 1px solid;\n  border-color: ${props => (props.errors ? '#f43f5e' : '#54ADFF')};\n`;\n\nexport const Message = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -15px;\n  left: 20px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(16 / 12);\n  color: #f43f5e;\n`;\n","import { Label, Input, PersonalDetailsWrapper } from './PersonalDetails.styled';\n\nconst PersonalDetails = ({ category, touched, errors }) => {\n  return (\n    <PersonalDetailsWrapper category={category}>\n      {category !== 'my-pet' && (\n        <Label>\n          Title of add\n          <Input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title of add\"\n            errors={touched.title && errors.title}\n          />\n          {touched.title && errors.title && <div>{errors.title}</div>}\n        </Label>\n      )}\n      <Label>\n        Name pet\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Type name pet\"\n          errors={touched.name && errors.name}\n        />\n        {touched.name && errors.name && <div>{errors.name}</div>}\n      </Label>\n      <Label>\n        Date of birth\n        <Input\n          type=\"text\"\n          name=\"dateOfBirth\"\n          placeholder=\"dd.mm.yyyy\"\n          errors={touched.dateOfBirth && errors.dateOfBirth}\n        />\n        {touched.dateOfBirth && errors.dateOfBirth && (\n          <div>{errors.dateOfBirth}</div>\n        )}\n      </Label>\n      <Label>\n        Breed\n        <Input\n          type=\"text\"\n          name=\"breed\"\n          placeholder=\"Type breed\"\n          errors={touched.breed && errors.breed}\n        />\n        {touched.breed && errors.breed && <div>{errors.breed}</div>}\n      </Label>\n    </PersonalDetailsWrapper>\n  );\n};\n\nexport default PersonalDetails;\n","import styled from '@emotion/styled';\n\nexport const CategoryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 95px;\n  gap: 12px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 137px;\n  }\n`;\n\nexport const Label = styled.label`\n  padding: 8px 16px;\n  width: fit-content;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  border-radius: 40px;\n\n  background-color: ${props => (props.checked ? '#54adff' : '#CCE4FB')};\n  color: ${props => (props.checked ? '#FEF9F9' : '#54ADFF')};\n  transition: all 0.2s ease-in-out;\n  will-change: transform;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  > input[type='radio'] {\n    visibility: hidden;\n    height: 0;\n    width: 0;\n  }\n`;\n","import { CategoryWrapper, Label } from './ChooseOption.styled';\nimport { Field } from 'formik';\n\nconst ChooseOption = ({ values }) => {\n  return (\n    <CategoryWrapper role=\"group\" aria-labelledby=\"category-radio-group\">\n      <Label checked={values.category === 'my-pet'}>\n        <Field\n          type=\"radio\"\n          value=\"my-pet\"\n          name=\"category\"\n          checked={values.category === 'my-pet'}\n        />\n        your pet\n      </Label>\n\n      <Label checked={values.category === 'sell'}>\n        <Field\n          type=\"radio\"\n          value=\"sell\"\n          name=\"category\"\n          checked={values.category === 'sell'}\n        />\n        sell\n      </Label>\n\n      <Label checked={values.category === 'lost-found'}>\n        <Field\n          type=\"radio\"\n          value=\"lost-found\"\n          name=\"category\"\n          checked={values.category === 'lost-found'}\n        />\n        lost/found\n      </Label>\n      <Label checked={values.category === 'for-free'}>\n        <Field\n          type=\"radio\"\n          value=\"for-free\"\n          name=\"category\"\n          checked={values.category === 'for-free'}\n        />\n        in good hands\n      </Label>\n    </CategoryWrapper>\n  );\n};\n\nexport default ChooseOption;\n","import styled from '@emotion/styled';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const MoreInfoWrapper = styled.div`\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\n    display: ${props =>\n      props.category !== 'my-pet' && props.step === 2 ? 'flex' : 'block'};\n    gap: 45px;\n  }\n\n  @media (min-width: 1280px) {\n    gap: 79px;\n  }\n`;\n\nexport const TheSexWrapper = styled.div`\n  position: relative;\n  margin-bottom: 16px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 50px;\n  }\n\n  > div {\n    display: flex;\n    gap: 23px;\n  }\n`;\n\nexport const TheSexTitle = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: #111111;\n`;\n\nexport const SexLabel = styled.label`\n  display: flex;\n  align-items: center;\n\n  font-weight: 400;\n  font-size: 16px;\n  line-height: calc(24 / 16);\n  letter-spacing: 0.04em;\n  color: ${props => (props.checked ? '#00C3AD' : '#888888')};\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  will-change: transform;\n\n  :hover {\n    transform: scale(1.05);\n  }\n\n  > input {\n    visibility: hidden;\n    height: 0;\n    width: 0;\n  }\n`;\n\nexport const PhotoWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  margin-bottom: 16px;\n\n  @media (min-width: 768px) {\n    display: ${props =>\n      props.category !== 'my-pet' && props.step === 2 ? 'block' : 'flex'};\n  }\n`;\n\nexport const PhotoText = styled.p`\n  width: 81px;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: #111111;\n\n  @media (min-width: 768px) {\n    font-size: 20px;\n    line-height: calc(26 / 20);\n    width: ${props =>\n      props.category !== 'my-pet' && props.step === 2 ? '200px' : '114px'};\n    margin-bottom: ${props =>\n      props.category !== 'my-pet' && props.step === 2 ? '8px' : '0'};\n  }\n`;\n\nexport const AddLabel = styled.label`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 112px;\n  height: 112px;\n  background-color: #cce4fb;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n\n  :hover {\n    transform: scale(1.05);\n  }\n\n  @media (min-width: 768px) {\n    width: 182px;\n    height: 182px;\n    border-radius: 40px;\n  }\n\n  > img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 20px;\n\n    @media (min-width: 768px) {\n      border-radius: 40px;\n    }\n  }\n\n  > div {\n    width: 200px;\n    left: 0;\n  }\n`;\n\nexport const FormFields = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  @media (min-width: 768px) {\n    gap: 24px;\n    width: ${props =>\n      props.category !== 'my-pet' && props.step === 2 ? '395px' : '100%'};\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n  color: #111111;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 9px 15px;\n  margin-top: 4px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n\n  outline: none;\n  border-radius: 40px;\n  border: 1px solid;\n  border-color: ${props => (props.errors ? '#f43f5e' : '#54ADFF')};\n`;\n\nexport const CommentsLabel = styled.label`\n  position: relative;\n  display: block;\n  color: #111111;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: calc(19 / 14);\n`;\n\nexport const TextArea = styled(Field)`\n  width: 100%;\n  height: 92px;\n  padding: 9px 15px;\n  margin-top: 4px;\n\n  color: #888888;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n\n  resize: none;\n  outline: none;\n  border-radius: 20px;\n  border: 1px solid;\n  border-color: ${props => (props.errors ? '#f43f5e' : '#54ADFF')};\n\n  @media (min-width: 768px) {\n    height: ${props =>\n      props.category === 'lost-found' ||\n      (props.category === 'for-free' && props.step === 2)\n        ? '182px'\n        : '79px'};\n  }\n\n  @media (min-width: 1280px) {\n  }\n`;\n\nexport const Message = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -15px;\n  left: 20px;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: calc(16 / 12);\n  color: #f43f5e;\n`;\n","import {\n  MoreInfoWrapper,\n  AddLabel,\n  PhotoWrap,\n  CommentsLabel,\n  Label,\n  Input,\n  TheSexWrapper,\n  TextArea,\n  FormFields,\n  SexLabel,\n  PhotoText,\n  TheSexTitle,\n} from './MoreInfo.styled';\nimport { Field } from 'formik';\nimport { Message } from './MoreInfo.styled';\nimport { BsGenderMale, BsGenderFemale } from 'react-icons/bs';\nimport { GrAdd } from 'react-icons/gr';\n\nconst MoreInfo = ({\n  setFieldValue,\n  category,\n  step,\n  values,\n  errors,\n  touched,\n}) => {\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n\n    if (!file) {\n      setFieldValue('image', '');\n      return;\n    }\n    setFieldValue('image', file);\n  };\n\n  return (\n    <MoreInfoWrapper step={step} category={category}>\n      <div>\n        {category !== 'my-pet' && (\n          <TheSexWrapper>\n            <TheSexTitle>The sex</TheSexTitle>\n            <div>\n              <SexLabel checked={values.sex === 'female'}>\n                <BsGenderFemale\n                  sx={{\n                    width: 24,\n                    height: 24,\n                    color: values.sex === 'male' ? '#888888' : '#F43F5E',\n                  }}\n                />\n                Female\n                <Field\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"female\"\n                  checked={values.sex === 'female'}\n                />\n              </SexLabel>\n              <SexLabel checked={values.sex === 'male'}>\n                <BsGenderMale\n                  sx={{\n                    width: 24,\n                    height: 24,\n                    color: values.sex === 'female' ? '#888888' : '#54ADFF',\n                    transform: 'rotate(-45deg)',\n                  }}\n                />\n                Male\n                <Field\n                  type=\"radio\"\n                  name=\"sex\"\n                  value=\"male\"\n                  checked={values.sex === 'male'}\n                />\n              </SexLabel>\n            </div>\n            <Message name=\"sex\" component=\"div\" />\n          </TheSexWrapper>\n        )}\n\n        <PhotoWrap step={step} category={category}>\n          <PhotoText step={step} category={category}>\n            {values.image ? 'Add photo' : 'Load the pet’s image: '}\n          </PhotoText>\n          <AddLabel>\n            {values.image ? (\n              <img src={URL.createObjectURL(values.image)} alt=\"pet\" />\n            ) : (\n              <GrAdd sx={{ fontSize: 50, color: '#54ADFF' }} />\n            )}\n            <input\n              type=\"file\"\n              name=\"image\"\n              accept=\".png, .jpg\"\n              multiple={false}\n              onChange={handleFileChange}\n              hidden\n            />\n\n            <Message name=\"image\" component=\"div\" />\n          </AddLabel>\n        </PhotoWrap>\n      </div>\n\n      <FormFields>\n        {category !== 'my-pet' && (\n          <Label>\n            Location\n            <Input\n              type=\"text\"\n              name=\"place\"\n              placeholder=\"Type location\"\n              errors={touched.place && errors.place}\n            />\n            <Message name=\"place\" component=\"div\" />\n          </Label>\n        )}\n\n        {category === 'sell' && (\n          <Label>\n            Price\n            <Input\n              type=\"text\"\n              name=\"price\"\n              placeholder=\"Type price\"\n              errors={touched.price && errors.price}\n            />\n            <Message name=\"price\" component=\"div\" />\n          </Label>\n        )}\n\n        <CommentsLabel>\n          Comments\n          <TextArea\n            as=\"textarea\"\n            name=\"comments\"\n            placeholder=\"Type comment\"\n            category={category}\n            step={step}\n            errors={touched.comments && errors.comments}\n          />\n          <Message name=\"comments\" component=\"div\" />\n        </CommentsLabel>\n      </FormFields>\n    </MoreInfoWrapper>\n  );\n};\n\nexport default MoreInfo;\n","import styled from '@emotion/styled';\n\nexport const AddPetFormWrapper = styled.div`\n  margin: 0 auto;\n  max-width: 458px;\n  padding: 20px 8px;\n\n  background-color: #ffffff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n\n  @media (min-width: 768px) {\n    padding: 20px 32px;\n    max-width: ${props =>\n      props.category !== 'my-pet' && props.step === 2 ? '704px' : '458px'};\n  }\n\n  @media (min-width: 1280px) {\n    max-width: ${props =>\n      props.category !== 'my-pet' && props.step === 2 ? '822px' : '458px'};\n    padding: ${props =>\n      props.category !== 'my-pet' && props.step === 2\n        ? '30px 75px'\n        : '20px 32px'};\n  }\n`;\n\nexport const PetFormTitle = styled.h1`\n  margin-bottom: 24px;\n  margin-left: 20px;\n\n  font-weight: 500;\n  font-size: 20px;\n  line-height: calc(27 / 20);\n  color: #111111;\n\n  @media (min-width: 768px) {\n    margin-left: 0;\n    text-align: ${props =>\n      props.category !== 'my-pet' && props.step === 2 ? 'center' : 'left'};\n  }\n`;\n\nexport const StepsList = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 36px;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n    margin-bottom: ${props => (props.step === 0 ? '60px' : '36px')};\n  }\n`;\n\nexport const Step = styled.li`\n  position: relative;\n  width: 80px;\n  font-size: 10px;\n  line-height: calc(14 / 10);\n  font-weight: 500;\n  color: ${props => {\n    if (props.step === 0) {\n      return props.index === 0 ? '#54ADFF' : '#888888';\n    } else if (props.step === 1) {\n      return props.index === 0\n        ? '#00C3AD'\n        : props.index === 1\n        ? '#54ADFF'\n        : '#888888';\n    } else if (props.step === 2) {\n      return props.index < 2 ? '#00C3AD' : '#54ADFF';\n    }\n  }};\n\n  @media (min-width: 768px) {\n    width: 120px;\n    font-size: 16px;\n    line-height: calc(26 / 26);\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: -20px;\n    left: 0;\n    width: 100%;\n    height: 8px;\n    border-radius: 8px;\n    background-color: ${props => {\n      if (props.step === 0) {\n        return props.index === 0 ? '#54ADFF' : '#CCE4FB';\n      } else if (props.step === 1) {\n        return props.index === 0\n          ? '#00C3AD'\n          : props.index === 1\n          ? '#54ADFF'\n          : '#CCE4FB';\n      } else if (props.step === 2) {\n        return props.index < 2 ? '#00C3AD' : '#54ADFF';\n      }\n    }};\n  }\n`;\n\nexport const ButtonWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: 768px) {\n    flex-direction: row-reverse;\n    gap: 32px;\n  }\n`;\n\nexport const ButtonFilled = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  width: 248px;\n  height: 40px;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  color: #fef9f9;\n  letter-spacing: 0.04em;\n  background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  background-position: 0 0, center;\n  background-size: 0% 0%, cover;\n  background-repeat: no-repeat;\n  background-color: #54adff;\n  border: none;\n  border-radius: 40px;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n\n  :hover {\n    transition: all 0.2s ease-in-out;\n    background-size: 100% 100%, cover;\n    transform: scale(1.05);\n  }\n\n  :disabled {\n    opacity: 0.5;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  width: 94px;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  letter-spacing: 0.04em;\n\n  background-color: transparent;\n  border: none;\n  color: #54adff;\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n\n  :hover {\n    transform: scale(1.05);\n  }\n`;\n","import * as Yup from 'yup';\n\nconst validationSchema = step => {\n  let schema;\n\n  if (step === 0) {\n    schema = Yup.object().shape({\n      category: Yup.string()\n        .oneOf(['my-pet', 'sell', 'lost-found', 'for-free'])\n        .required(),\n    });\n  }\n\n  if (step === 1) {\n    schema = Yup.object().shape({\n      name: Yup.string()\n        .required()\n        .trim()\n        .min(2, 'Too Short!')\n        .max(16, 'Too Long!'),\n      dateOfBirth: Yup.string()\n        .required('Date is required')\n        .matches(\n          /^(0[1-9]|1[0-9]|2[0-9]|3[01])\\.(0[1-9]|1[012])\\.\\d{4}$/,\n          'Invalid date format (dd.mm.yyyy)'\n        )\n        .test(\n          'not-in-future',\n          'Date should not exceed the current date',\n          function (value) {\n            const currentDate = new Date();\n            const inputDate = new Date(\n              value.substring(6),\n              value.substring(3, 5) - 1,\n              value.substring(0, 2)\n            );\n            return inputDate <= currentDate;\n          }\n        ),\n\n      breed: Yup.string()\n        .required()\n        .min(2, 'Too Short!')\n        .max(16, 'Too Long!')\n        .trim(),\n      title: Yup.string().when('category', {\n        is: category => ['sell', 'lost-found', 'for-free'].includes(category),\n        then: () => Yup.string().trim().required('Title is required'),\n      }),\n    });\n  }\n\n  if (step === 2) {\n    schema = Yup.object().shape({\n      sex: Yup.string().when('category', {\n        is: category => ['sell', 'lost-found', 'for-free'].includes(category),\n        then: () =>\n          Yup.string()\n            .oneOf(['male', 'female'])\n            .required('The sex is required'),\n      }),\n      place: Yup.string().when('category', {\n        is: category => ['sell', 'lost-found', 'for-free'].includes(category),\n        then: () => Yup.string().trim().required('Location is required'),\n      }),\n      price: Yup.number().when('category', {\n        is: category => category === 'sell',\n        then: () =>\n          Yup.number()\n            .required('Price is required')\n            .positive('Price should be positive')\n            .typeError('please enter a valid number'),\n      }),\n      comments: Yup.string()\n        .min(4, 'Comments should be at least 4 characters')\n        .max(120, 'Comments should not exceed 120 characters')\n        .trim(),\n      image: Yup.mixed()\n        .required('Image is required')\n        .test(\n          'image',\n          'Image size must be less then 3mb',\n          value => value && value.size <= 3 * 1024 * 1024\n        ),\n    });\n  }\n\n  return schema;\n};\n\nexport default validationSchema;\n","\nimport { useState } from 'react';\n\n//добавила\n\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { isUserLogin } from '../../redux/auth/auth-selectors';\n\n// вказати імпорти на хуки та нотісайс та редакс\n\nimport { Formik, Form } from 'formik';\nimport PersonalDetails from './PersonalDetails/PersonalDetails';\nimport ChooseOption from './ChooseOption/ChooseOption';\nimport MoreInfo from './MoreInfo/MoreInfo';\n\nimport {\n  AddPetFormWrapper,\n  PetFormTitle,\n  StepsList,\n  Step,\n  Button,\n  ButtonFilled,\n  ButtonWrap,\n} from './AddPetForm.styled';\nimport { MdPets, MdWest } from 'react-icons/md';\nimport validationSchema from './validationSchema';\nimport { useSelector } from 'react-redux';\n\nconst initialValues = {\n  category: 'my-pet',\n  name: '',\n  dateOfBirth: '',\n  breed: '',\n  image: '',\n  sex: '',\n  place: '',\n  price: '',\n  comments: '',\n  title: '',\n};\n\n//Добавила { addPet }\nconst AddPetForm = ({ addPet }) => {\n  // тут треба хукі ще\n  // на навігацію navigate\n  // на діспатч dispatch\n  // на лоадінг isLoading\n  // на звязати з нотісайс isNoticeLoading\n  //\n  //\n  const [step, setStep] = useState(0);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const steps = ['Choose option', 'Personal details', 'More info'];\n\n  //добавила в useSelector(isUserLogin);\n  const isLoading = useSelector(isUserLogin);\n\n  //указала isUserLogin проверить ,какой имеено добавлять useSelector() не знаю\n  const isNoticeLoading = useSelector(isUserLogin);\n\n  const handleClickNext = e => {\n    e.preventDefault();\n\n    if (step === 2) {\n      return;\n    }\n    setStep(step + 1);\n  };\n\n  const handleClickBack = e => {\n    e.preventDefault();\n    setStep(step - 1);\n  };\n\n  const handleCancel = e => {\n    e.preventDefault();\n    navigate(-1);\n  };\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const formData = new FormData();\n\n    formData.append('name', values.name.trim());\n    formData.append('dateOfBirth', values.dateOfBirth);\n    formData.append('breed', values.breed.trim());\n    formData.append('comments', values.comments.trim());\n    formData.append('image', values.image, values.image.name);\n\n    if (values.category === 'my-pet') {\n      dispatch(addPet(formData))\n        .then(response => {\n          if (!response.error) {\n            navigate('/user');\n            resetForm();\n            return;\n          }\n          return;\n        })\n        .catch(error => console.log(error));\n    }\n\n    formData.append('title', values.title.trim());\n    formData.append('place', values.place.trim());\n    formData.append('sex', values.sex);\n\n    if (values.category === 'lost-found') {\n      dispatch([values.category, formData]).then(response => {\n        if (!response.error) {\n          navigate(`/notices/${values.category}`);\n          resetForm();\n          return;\n        }\n        return;\n      });\n    }\n\n    if (values.category === 'for-free') {\n      dispatch([values.category, formData]).then(response => {\n        if (!response.error) {\n          navigate(`/notices/${values.category}`);\n          resetForm();\n          return;\n        }\n        return;\n      });\n    }\n\n    formData.append('price', values.price.toString());\n\n    if (values.category === 'sell') {\n      dispatch([values.category, formData]).then(response => {\n        if (!response.error) {\n          navigate(`/notices/${values.category}`);\n          resetForm();\n          return;\n        }\n        return;\n      });\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema(step)}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        touched,\n        errors,\n        setFieldValue,\n        validateField,\n        setTouched,\n      }) => (\n        <AddPetFormWrapper\n          step={step}\n          category={values.category}\n          autoComplete=\"off\"\n        >\n          <PetFormTitle step={step} category={values.category}>\n            {step === 0\n              ? 'Add pet'\n              : values.category === 'my-pet'\n              ? 'Add pet'\n              : values.category === 'sell'\n              ? 'Add pet for sale'\n              : values.category === 'lost-found'\n              ? 'Add lost pet'\n              : 'Add for free'}\n          </PetFormTitle>\n          <Form>\n            <StepsList step={step}>\n              {steps.map((stepName, index) => (\n                <Step\n                  key={stepName}\n                  step={step}\n                  index={index}\n                  category={values.category}\n                >\n                  {stepName}\n                </Step>\n              ))}\n            </StepsList>\n\n            {step === 0 && (\n              <ChooseOption category={values.category} values={values} />\n            )}\n\n            {step === 1 && (\n              <PersonalDetails\n                category={values.category}\n                errors={errors}\n                touched={touched}\n              />\n            )}\n\n            {step === 2 && (\n              <MoreInfo\n                category={values.category}\n                step={step}\n                values={values}\n                setFieldValue={setFieldValue}\n                errors={errors}\n                touched={touched}\n              />\n            )}\n            <ButtonWrap category={values.category} step={step}>\n              {step === 2 ? (\n                <ButtonFilled\n                  type=\"submit\"\n                  disabled={isLoading || isNoticeLoading}\n                >\n                  <span>Done</span>\n                  <MdPets\n                    sx={{\n                      width: 24,\n                      height: 20,\n                      color: 'white',\n                      transform: 'rotate(25deg)',\n                    }}\n                  />\n                </ButtonFilled>\n              ) : (\n                <ButtonFilled\n                  type=\"button\"\n                  onClick={e => {\n                    if (step === 0) {\n                      setTouched({});\n                      handleClickNext(e);\n                    }\n                    if (step === 1) {\n                      validateField('name');\n                      validateField('dateOfBirth');\n                      validateField('breed');\n                      validateField('title');\n                      setTouched({\n                        name: true,\n                        dateOfBirth: true,\n                        breed: true,\n                        title: true,\n                      });\n                    }\n                    if (\n                      step === 1 &&\n                      Object.keys(errors).length === 0 &&\n                      Object.keys(touched).length !== 0\n                    ) {\n                      handleClickNext(e);\n                    }\n                  }}\n                >\n                  Next\n                  {/* <span>Next</span> */}\n                  <MdPets\n                    sx={{ width: 24, height: 24, transform: 'rotate(25deg)' }}\n                  />\n                </ButtonFilled>\n              )}\n              <Button\n                type=\"button\"\n                onClick={step === 0 ? handleCancel : handleClickBack}\n              >\n                <MdWest sx={{ width: 24, height: 24 }} />\n                <span>{step === 0 ? 'Cancel' : 'Back'}</span>\n              </Button>\n            </ButtonWrap>\n          </Form>\n        </AddPetFormWrapper>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddPetForm;\n\n\n// import { Formik, Form } from 'formik';\n\n// import PersonalDetails from './PersonalDetails/PersonalDetails';\n// import ChooseOption from './ChooseOption/ChooseOption';\n// import MoreInfo from './MoreInfo/MoreInfo';\n\n// import {\n//   AddPetFormWrapper,\n//   PetFormTitle,\n//   StepsList,\n//   Step,\n//   Button,\n//   ButtonFilled,\n//   ButtonWrap,\n// } from './AddPetForm.styled';\n// import { MdPets, MdWest } from 'react-icons/md';\n// import validationSchema from './validationSchema';\n\n// const initialValues = {\n//   category: 'my-pet',\n//   name: '',\n//   dateOfBirth: '',\n//   breed: '',\n//   image: '',\n//   sex: '',\n//   place: '',\n//   price: '',\n//   comments: '',\n//   title: '',\n// };\n\n// const AddPetForm = () => {\n//   const [step, setStep]\n// // тут треба хукі ще\n\n//    const steps = ['Choose option', 'Personal details', 'More info'];\n\n//   const handleClickNext = e => {\n//     e.preventDefault();\n\n//     if (step === 2) {\n//       return;\n//     }\n//     setStep(step + 1);\n//   };\n\n//   const handleClickBack = e => {\n//     e.preventDefault();\n//     setStep(step - 1);\n//   };\n\n//   const handleCancel = e => {\n//     e.preventDefault();\n//     navigate(-1);\n//   };\n\n//   const handleSubmit = async (values, { resetForm }) => {\n//     const formData = new FormData();\n\n//     formData.append('name', values.name.trim());\n//     formData.append('dateOfBirth', values.dateOfBirth);\n//     formData.append('breed', values.breed.trim());\n//     formData.append('comments', values.comments.trim());\n//     formData.append('image', values.image, values.image.name);\n\n//     if (values.category === 'my-pet') {\n//       dispatch(addPet(formData))\n//         .then(response => {\n//           if (!response.error) {\n//             navigate('/user');\n//             resetForm();\n//             return;\n//           }\n//           return;\n//         })\n//         .catch(error => console.log(error));\n//     }\n\n//     formData.append('title', values.title.trim());\n//     formData.append('place', values.place.trim());\n//     formData.append('sex', values.sex);\n\n//     if (values.category === 'lost-found') {\n//       dispatch(([values.category, formData])).then(response => {\n//         if (!response.error) {\n//           navigate(`/notices/${values.category}`);\n//           resetForm();\n//           return;\n//         }\n//         return;\n//       });\n//     }\n\n//     if (values.category === 'for-free') {\n//       dispatch(([values.category, formData])).then(response => {\n//         if (!response.error) {\n//           navigate(`/notices/${values.category}`);\n//           resetForm();\n//           return;\n//         }\n//         return;\n//       });\n//     }\n\n//     formData.append('price', values.price.toString());\n\n//     if (values.category === 'sell') {\n//       dispatch([values.category, formData]).then(response => {\n//         if (!response.error) {\n//           navigate(`/notices/${values.category}`);\n//           resetForm();\n//           return;\n//         }\n//         return;\n//       });\n//     }\n//   };\n\n//   return (\n//     <Formik\n//       initialValues={initialValues}\n//       validationSchema={validationSchema(step)}\n//       onSubmit={handleSubmit}\n//     >\n//       {({\n//         values,\n//         touched,\n//         errors,\n//         setFieldValue,\n//         validateField,\n//         setTouched,\n//       }) => (\n//         <AddPetFormWrapper\n//           step={step}\n//           category={values.category}\n//           autoComplete=\"off\"\n//         >\n//           <PetFormTitle step={step} category={values.category}>\n//             {step === 0\n//               ? 'Add pet'\n//               : values.category === 'my-pet'\n//               ? 'Add pet'\n//               : values.category === 'sell'\n//               ? 'Add pet for sale'\n//               : values.category === 'lost-found'\n//               ? 'Add lost pet'\n//               : 'Add for free'}\n//           </PetFormTitle>\n//           <Form>\n//             <StepsList step={step}>\n//               {steps.map((stepName, index) => (\n//                 <Step\n//                   key={stepName}\n//                   step={step}\n//                   index={index}\n//                   category={values.category}\n//                 >\n//                   {stepName}\n//                 </Step>\n//               ))}\n//             </StepsList>\n\n//             {step === 0 && (\n//               <ChooseOption category={values.category} values={values} />\n//             )}\n\n//             {step === 1 && (\n//               <PersonalDetails\n//                 category={values.category}\n//                 errors={errors}\n//                 touched={touched}\n//               />\n//             )}\n\n//             {step === 2 && (\n//               <MoreInfo\n//                 category={values.category}\n//                 step={step}\n//                 values={values}\n//                 setFieldValue={setFieldValue}\n//                 errors={errors}\n//                 touched={touched}\n//               />\n//             )}\n//             <ButtonWrap category={values.category} step={step}>\n//               {step === 2 ? (\n//                 <ButtonFilled\n//                   type=\"submit\"\n//                   disabled={isLoading || isNoticeLoading}\n//                 >\n//                   <span>Done</span>\n//                   <MdPets\n//                     sx={{\n//                       width: 24,\n//                       height: 20,\n//                       color: 'white',\n//                       transform: 'rotate(25deg)',\n//                     }}\n//                   />\n//                 </ButtonFilled>\n//               ) : (\n//                 <ButtonFilled\n//                   type=\"button\"\n//                   onClick={e => {\n//                     if (step === 0) {\n//                       setTouched({});\n//                       handleClickNext(e);\n//                     }\n//                     if (step === 1) {\n//                       validateField('name');\n//                       validateField('dateOfBirth');\n//                       validateField('breed');\n//                       validateField('title');\n//                       setTouched({\n//                         name: true,\n//                         dateOfBirth: true,\n//                         breed: true,\n//                         title: true,\n//                       });\n//                     }\n//                     if (\n//                       step === 1 &&\n//                       Object.keys(errors).length === 0 &&\n//                       Object.keys(touched).length !== 0\n//                     ) {\n//                       handleClickNext(e);\n//                     }\n//                   }}\n//                 >\n//                   Next\n//                   {/* <span>Next</span> */}\n//                   <MdPets\n//                     sx={{ width: 24, height: 24, transform: 'rotate(25deg)' }}\n//                   />\n//                 </ButtonFilled>\n//               )}\n//               <Button\n//                 type=\"button\"\n//                 onClick={step === 0 ? handleCancel : handleClickBack}\n//               >\n//                 <MdWest sx={{ width: 24, height: 24 }} />\n//                 <span>{step === 0 ? 'Cancel' : 'Back'}</span>\n//               </Button>\n//             </ButtonWrap>\n//           </Form>\n//         </AddPetFormWrapper>\n//       )}\n//     </Formik>\n//   );\n// };\n\n// export default AddPetForm;\n","// import AddPetButton from 'components/AddPetButton/AddPetButton';\n\n// const AddPetPage = () => {\n//   return (\n//     <>\n//       <AddPetButton />\n//     </>\n//   );\n//   // return <AddPet />;\n// };\n\n// export default AddPetPage;\n\nimport { useEffect } from 'react';\nimport AddPetForm from '../../components/AddPet/AddPetForm';\n\nconst AddPetPage = () => {\n  useEffect(() => {\n    document.title = 'YourPet | Add pet';\n  });\n\n  return <AddPetForm />;\n};\n\nexport default AddPetPage;\n"],"names":["PersonalDetailsWrapper","styled","_templateObject","_taggedTemplateLiteral","props","category","Label","_templateObject2","Input","Field","_templateObject3","errors","ErrorMessage","_templateObject4","_ref","touched","_jsxs","children","_jsx","type","name","placeholder","title","dateOfBirth","breed","CategoryWrapper","checked","values","role","value","MoreInfoWrapper","step","TheSexWrapper","TheSexTitle","SexLabel","PhotoWrap","_templateObject5","PhotoText","_templateObject6","AddLabel","_templateObject7","FormFields","_templateObject8","_templateObject9","_templateObject10","CommentsLabel","_templateObject11","TextArea","_templateObject12","Message","_templateObject13","setFieldValue","sex","BsGenderFemale","sx","width","height","color","BsGenderMale","transform","component","image","src","URL","createObjectURL","alt","GrAdd","fontSize","accept","multiple","onChange","e","file","target","files","hidden","place","price","as","comments","AddPetFormWrapper","PetFormTitle","StepsList","Step","index","ButtonWrap","ButtonFilled","Button","schema","Yup","shape","oneOf","required","trim","min","max","matches","test","currentDate","Date","substring","when","is","includes","then","positive","typeError","size","initialValues","addPet","_useState","useState","_useState2","_slicedToArray","setStep","navigate","useNavigate","dispatch","useDispatch","steps","isLoading","useSelector","isUserLogin","isNoticeLoading","handleClickNext","preventDefault","handleClickBack","handleCancel","handleSubmit","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","resetForm","formData","wrap","_context","prev","next","FormData","append","response","error","catch","console","log","concat","toString","stop","_x","_x2","apply","arguments","Formik","validationSchema","onSubmit","_ref4","validateField","setTouched","autoComplete","Form","map","stepName","ChooseOption","PersonalDetails","MoreInfo","disabled","MdPets","onClick","Object","keys","length","MdWest","useEffect","document","AddPetForm"],"sourceRoot":""}