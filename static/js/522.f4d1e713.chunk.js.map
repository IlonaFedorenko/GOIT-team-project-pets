{"version":3,"file":"static/js/522.f4d1e713.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Background/Background.module.css?ea01","components/Background/Background.jsx","components/OurFriends/OurFriends.styled.js","components/OurFriends/OurFriends.jsx","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__WcKDH\"};","import React from 'react';\n\nimport css from './Background.module.css';\n\nconst Background = () => {\n  return <div className={css.background}></div>;\n};\n\nexport default Background;\n","import styled from 'styled-components';\n\nexport const TitleMain = styled.h2`\n  text-align: center;\n  font-size: 48px;\n  margin-bottom: 36px;\n  margin-top: 60px;\n  font-family: Manrope-Bold;\n\n  @media screen and (max-width: 747px) {\n    font-size: 24px;\n    margin-bottom: 24px;\n    margin-top: 40px;\n  }\n`;\n\nexport const List = styled.ul`\n  margin-top: 24px;\n  margin-bottom: 60px;\n\n  @media screen and (min-width: 748px) {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: start;\n  }\n  @media screen and (min-width: 1024px) {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n  border-radius: 40px;\n  padding: 16px;\n  box-shadow: 3px 8px 14px 0 rgba(136, 198, 253, 0.19);\n  background-color: #ffffff;\n  width: 280px;\n  height: 250px;\n  margin-left: auto;\n  margin-right: auto;\n  &:focus,\n  &:hover {\n    box-shadow: ${({ theme }) => theme.boxShadows.secondary};\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-top: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 290px;\n    margin: 16px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    height: 300px;\n    margin: 16px;\n  }\n`;\n\nexport const Title = styled.a`\n  font-size: 20px;\n  font-weight: 700;\n  color: #54adff;\n  text-decoration: none;\n`;\n\nexport const ImgThumb = styled.div`\n  margin-right: 12px;\n  margin-top: 18px;\n\n  @media screen and (max-width: 747px) {\n    width: 100px;\n  }\n\n  @media screen and (min-width: 748px) and (max-width: 1279px) {\n    width: 140px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 146px;\n  }\n`;\n\nexport const Img = styled.img`\n  @media screen and (max-width: 747px) {\n    width: 100px;\n  }\n\n  @media screen and (min-width: 748px) and (max-width: 1279px) {\n    width: 140px;\n    padding: 5px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 146px;\n    padding: 5px;\n  }\n`;\n\nexport const Contacts = styled.p`\n  font-size: 12px;\n  font-weight: 500;\n  color: #111111;\n  margin-top: 12px;\n\n  @media screen and (min-width: 748px) and (max-width: 1279px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const WrapperCard = styled.div`\n  display: flex;\n`;\n\nexport const WrapperInfo = styled.div`\n  text-align: left;\n  padding: 0px;\n`;\n\nexport const ContactTitle = styled.div`\n  margin: 0px;\n  font-size: 12px;\n  font-family: Manrope-Bold;\n\n  @media screen and (min-width: 767px) {\n    font-size: 16px;\n  }\n`;\n\nexport const ContactsLink = styled.a`\n  text-decoration: none;\n  font-size: 12px;\n  font-weight: 500;\n  color: #111111;\n  transition: color 150ms ease-in;\n\n  &:hover,\n  &:focus {\n    color: #54adff;\n  }\n\n  @media screen and (min-width: 748px) and (max-width: 1279px) {\n    font-size: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Popover = styled.div`\n  position: absolute;\n  background-color: #ffffff;\n  border: 1px solid #ccc;\n  padding: 8px;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  z-index: 999;\n`;\n\nexport const WorkDaysList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const WorkDay = styled.li`\n  padding: 4px 0;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport { getFriends } from '../../redux/friends/friends-operation';\nimport {\n  List,\n  Item,\n  Title,\n  TitleMain,\n  ImgThumb,\n  Contacts,\n  WrapperCard,\n  WrapperInfo,\n  ContactTitle,\n  ContactsLink,\n  Img,\n  // Popover,\n  // WorkDaysList,\n  // WorkDay,\n} from './OurFriends.styled';\nimport Background from '../Background/Background';\n\n\nconst OurFriends = ({ data }) => {\n  const dispatch = useDispatch();\n  // const [isPopoverVisible, setPopoverVisible] = useState(false);\n  const { friends, loading, error } = useSelector(\n    state => state.friends.friends\n  );\n\n  function formatPhone(number) {\n    if (number === 'email only') {\n      return 0;\n    }\n    return number.split(' ').join('');\n  }\n\n  useEffect(() => {\n    dispatch(getFriends());\n  }, [dispatch]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  if (!Array.isArray(friends) || friends.length === 0) {\n    return null;\n  }\n\n  // const handleMouseEnter = () => {\n  //   setPopoverVisible(true);\n  // };\n\n  // const handleMouseLeave = () => {\n  //   setPopoverVisible(false);\n  // };\n\n  return (\n    <>\n      <TitleMain>Our friends</TitleMain>\n      <Background />\n      <List>\n        {friends\n          ? friends.map(item => (\n              <Item>\n                <Title href={item.url}>{item.title}</Title>\n\n                <WrapperCard>\n                  <ImgThumb>\n                    <Img src={item.imageUrl} alt=\"\"></Img>\n                    {/* <Img src={item.imageUrl} alt=\"\" /> */}\n                  </ImgThumb>\n\n                  <WrapperInfo>\n                    <Contacts>\n                      <ContactTitle>Time:</ContactTitle>\n                      {item.workDays &&\n                      Array.isArray(item.workDays) &&\n                      item.workDays.find(day => day.isOpen)?.from &&\n                      item.workDays.find(day => day.isOpen).to\n                        ? `${item.workDays.find(day => day.isOpen).from}-${\n                            item.workDays.find(day => day.isOpen).to\n                          }`\n                        : 'day and night'}\n                      {/* <span\n                        onMouseEnter={handleMouseEnter}\n                        onMouseLeave={handleMouseLeave}\n                      >\n                        {item.workDays &&\n                        Array.isArray(item.workDays) &&\n                        item.workDays.some(day => day.isOpen)\n                          ? item.workDays\n                              .filter(day => day.isOpen)\n                              .map(day => `${day.from}-${day.to}`)\n                              .join(', ')\n                          : 'day and night'}\n                      </span>\n                      {isPopoverVisible && (\n                        <Popover>\n                          <WorkDaysList>\n                            {item.workDays &&\n                              Array.isArray(item.workDays) &&\n                              item.workDays.map((day, index) => (\n                                <WorkDay key={index}>\n                                  {day.isOpen\n                                    ? `${day.from}-${day.to}`\n                                    : 'Closed'}\n                                </WorkDay>\n                              ))}\n                          </WorkDaysList>\n                        </Popover>\n                      )} */}\n                    </Contacts>\n\n                    <Contacts>\n                      <ContactTitle>Address:</ContactTitle>\n                      {item.addressUrl ? (\n                        <ContactsLink href={item.addressUrl}>\n                          {item.address}\n                        </ContactsLink>\n                      ) : (\n                        <span>website only</span>\n                      )}\n                    </Contacts>\n\n                    <Contacts>\n                      <ContactTitle>Email:</ContactTitle>\n                      {item.email ? (\n                        <ContactsLink href={`mailto:${item.email}`}>\n                          {item.email}\n                        </ContactsLink>\n                      ) : (\n                        <span>website only</span>\n                      )}\n                    </Contacts>\n\n                    <Contacts>\n                      <ContactTitle>Phone:</ContactTitle>\n                      {item.phone && item.phone !== 'website only' ? (\n                        <ContactsLink href={`tel:${formatPhone(item.phone)}`}>\n                          {item.phone}\n                        </ContactsLink>\n                      ) : (\n                        <span>website only</span>\n                      )}\n                    </Contacts>\n                  </WrapperInfo>\n                </WrapperCard>\n              </Item>\n            ))\n          : null}\n      </List>\n    </>\n  );\n};\n\nexport default OurFriends;\n","import OurFriends from '../../components/OurFriends/OurFriends';\n\nconst OurFriendsPage = () => {\n  return (\n    <>\n      <OurFriends />\n    </>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["_jsx","className","css","TitleMain","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Item","_templateObject3","_ref","theme","boxShadows","secondary","Title","_templateObject4","ImgThumb","_templateObject5","Img","_templateObject6","Contacts","_templateObject7","WrapperCard","_templateObject8","WrapperInfo","_templateObject9","ContactTitle","_templateObject10","ContactsLink","_templateObject11","_templateObject12","_templateObject13","_templateObject14","data","dispatch","useDispatch","_useSelector","useSelector","state","friends","loading","error","useEffect","getFriends","children","_jsxs","Array","isArray","length","_Fragment","Background","map","item","_item$workDays$find","number","href","url","title","src","imageUrl","alt","workDays","find","day","isOpen","from","to","concat","addressUrl","address","email","phone","split","join","OurFriends"],"sourceRoot":""}