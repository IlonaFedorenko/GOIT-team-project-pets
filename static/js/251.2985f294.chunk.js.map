{"version":3,"file":"static/js/251.2985f294.chunk.js","mappings":"yTAgDA,EAnCyB,WACvB,IAAMA,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAIXC,IAHQN,EAAAA,EAAAA,IAAYO,EAAAA,KACVP,EAAAA,EAAAA,IAAYQ,EAAAA,IAEX,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAASP,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SAAcC,EAAaH,EAAbG,cAC1CC,EAAO,CAAEH,MAAAA,EAAOC,SAAAA,GACtB,IACEb,GAASoB,EAAAA,EAAAA,IAAML,GACA,CAAf,MAAOM,GAAQ,CACjBP,GAAc,GAAO,wBAAAG,EAAAK,OAAA,GAAAb,EAAA,KACtB,gBANgBc,EAAAC,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA,MAkBjB,OAVAC,EAAAA,EAAAA,YAAU,WACJhC,GACFG,EAAS,QAAS,CAAE8B,MAAO,CAAEC,KAAM,WAEvC,GAAG,CAAClC,EAASG,KAOXgC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAACC,UAAWC,EAAAA,EAAAA,aAAiBC,SAAA,EACnCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,KACXD,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CAAAH,UACRC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CAACC,SAAUrC,QAI5B,C","sources":["pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Background from 'components/Background/Background';\nimport AuthForm from 'components/AuthForm/AuthForm';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container/Container';\nimport { login } from 'redux/auth/auth-operations';\nimport { useNavigate } from 'react-router-dom';\nimport { isUserLogin, isLoading, checkError } from 'redux/auth/auth-selectors';\n// import Loader from 'components/Loader/Loader';\n\nimport css from '../../components/Section/Section.module.css';\n\nexport const LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const error = useSelector(checkError);\n  const loading = useSelector(isLoading);\n\n  const handleLogin = async ({ email, password }, { setSubmitting }) => {\n    const data = { email, password };\n    try {\n      dispatch(login(data));\n    } catch (error) {}\n    setSubmitting(false);\n  };\n\n  useEffect(() => {\n    if (isLogin) {\n      navigate('/user', { state: { from: '/login' } });\n    }\n  }, [isLogin, navigate]);\n\n  if (loading && !error) {\n    // return <Loader />;\n  }\n\n  return (\n    <Section className={css.sectionlogin}>\n      <Background />\n      <Container>\n        <AuthForm onSubmit={handleLogin} />\n      </Container>\n    </Section>\n  );\n};\n\nexport default LoginPage;\n"],"names":["isLogin","useSelector","isUserLogin","navigate","useNavigate","dispatch","useDispatch","handleLogin","checkError","isLoading","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","_ref2","email","password","setSubmitting","data","wrap","_context","prev","next","login","error","stop","_x","_x2","apply","arguments","useEffect","state","from","_jsxs","Section","className","css","children","_jsx","Background","Container","AuthForm","onSubmit"],"sourceRoot":""}