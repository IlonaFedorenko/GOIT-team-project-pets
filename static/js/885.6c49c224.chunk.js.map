{"version":3,"file":"static/js/885.6c49c224.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Background/Background.module.css?ea01","components/Background/Background.jsx","webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","components/UserCard/UserCard.styled.jsx","components/Logout/Logout.styled.jsx","components/Logout/Logout.jsx","components/UserForm/UserForm.styled.jsx","validation/userFormValidation.js","components/UserForm/UserForm.jsx","components/UserData/UserData.styled.jsx","components/UserData/UserData.jsx","pages/UserPage/UserPage.styled.jsx","pages/UserPage/UserPage.jsx","validation/authValidation.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"background\":\"Background_background__WcKDH\"};","import React from 'react';\n\nimport css from './Background.module.css';\n\nconst Background = () => {\n  return <div className={css.background}></div>;\n};\n\nexport default Background;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import { PropTypes } from 'prop-types';\nimport css from './Container.module.css';\n\nconst Container = ({ children, className }) => {\n  return <div className={`${css.container} ${className}`}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","// import { Form } from 'formik';\nimport styled from 'styled-components';\n// import { RxCross1 } from 'react-icons/rx';\n// import { ImCross } from 'react-icons/im';\n// import { FiEdit3 } from 'react-icons/fi';\n// import { theme } from 'theme/theme';\n\n// export const UserInfo = styled.div`\n//   @media screen and min-width: 480px {\n//     display: flex;\n//     flex-direction: row-reverse;\n//     justify-content: space-between;\n//     @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n//       display: block;\n//     }\n//   }\n// `;\n\n// export const StylizedForm = styled(Form)`\n//   @media screen and (min-width: ${({ theme }) =>\n//       theme.breakpoints.tablet}) max-width: ${({ theme }) =>\n//       theme.breakpoints.desktop} {\n//     width: 182px;\n//   }\n// `;\n\nexport const FormTitle = styled.h2`\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.fontSizes[3]};\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[5]};\n  }\n`;\n\nexport const LabelField = styled.div`\n  display: flex;\n`;\n\nexport const LogOutBtn = styled.button``;\n","import styled from 'styled-components';\nimport { CiLogout } from 'react-icons/ci';\n\nexport const IconExit = styled(CiLogout)``;\n","import { LogOutBtn } from 'components/UserCard/UserCard.styled';\nimport { useDispatch } from 'react-redux';\nimport { logout } from 'redux/auth/auth-operations';\nimport { IconExit } from './Logout.styled';\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <LogOutBtn type=\"button\" onClick={handleLogout}>\n      <IconExit />\n      <span>Log out</span>\n    </LogOutBtn>\n  );\n};\n\nexport default Logout;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n// import { RxCross1 } from 'react-icons/rx';\nimport { ImCross } from 'react-icons/im';\nimport { FiEdit3 } from 'react-icons/fi';\nimport { BsCamera } from 'react-icons/bs';\nimport { BsCheck2 } from 'react-icons/bs';\n// import { BsCamera } from 'react-icons/bs';\nimport { theme } from 'theme/theme';\n\nexport const StylizedForm = styled(Form)`\n  @media screen and (min-width: ${({ theme }) =>\n      theme.breakpoints.tablet}) and (max-width: ${({ theme }) =>\n      theme.breakpoints.desktop}) {\n    width: 182px;\n    display: flex;\n    flex-direction: row-reverse;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n`;\n\nexport const EditIcon = styled.div`\n  display: block;\n  position: absolute;\n  top: 3%;\n  right: 3%;\n`;\n\nexport const Icon = styled(ImCross)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const IconEdit = styled(FiEdit3)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const IconCheckPhoto = styled(BsCheck2)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const UserInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const EditInpuButton = styled.div`\n  position: absolute;\n  overflow: visible;\n  right: ${({ theme }) => theme.space[2] * 3 + 'px'};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${({ theme }) => theme.space[0] + 'px'};\n  margin: ${({ theme }) => theme.space[0] + 'px'};\n  background: transparent;\n  border: none;\n`;\n\nexport const ButtonSave = styled.button`\n  @media screen and (max-width: 767px) {\n    padding: 6px 0;\n    font-size: 14px;\n  }\n  @media screen and (min-width: ${({ theme }) =>\n      theme.breakpoints.tablet}) (max-width: 1279px) {\n    padding: 5px 0;\n    width: 255px;\n    font-size: 16px;\n  }\n  width: 100%;\n  gap: 8px;\n  padding: 11px 0;\n  margin-bottom: 24px;\n  color: #ffffff;\n  background-color: #54adff;\n  border-radius: 40px;\n  border: none;\n  outline: none;\n  font-family: inherit;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  cursor: pointer;\n\n  :hover {\n    background: linear-gradient(290.46deg, #419ef1 0%, #9bd0ff 107.89%);\n  }\n  span {\n    font-size: 14px;\n  }\n`;\n\nexport const Label = styled.label`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 19px;\n  letter-spacing: 0.04em;\n  color: #111111;\n\n  display: flex;\n  align-items: center;\n  /* justify-content: center; */\n  justify-content: space-between;\n  gap: 8px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: 18px;\n    line-height: 25px;\n  }\n\n  :not(:first-child) {\n    height: 32px;\n    width: 255px;\n    border: 1px solid ${theme.colors.blue};\n    border-radius: 20px;\n  }\n\n  /* div:nth-child(n) {\n    border: 1px solid transparent;\n  } */\n`;\n\nexport const Avatar = styled.img`\n  display: block;\n  width: 182px;\n  height: 182px;\n  object-fit: cover;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ${({ theme }) => theme.space[0] + 'px'};\n  margin-bottom: ${({ theme }) => theme.space[0] + 'px'};\n  border-radius: 40px;\n`;\n\nexport const IconEditPhoto = styled(BsCamera)`\n  width: 24px;\n  height: 24px;\n  fill: ${theme.colors.blue};\n  stroke: ${theme.colors.blue};\n`;\n\nexport const EditPhotoWrap = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const AvatarSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  margin-bottom: 14px;\n`;\n\nexport const FormSection = styled.div`\n  @media screen and (max-width: 767px) {\n  }\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const ErrorMessageStyled = styled.div`\n  color: red;\n`;\n","import * as Yup from 'yup';\n\nconst emailRegExp =\n  /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/;\n\nconst phoneRegExp = /^\\+\\d{2}\\d{3}\\d{3}\\d{2}\\d{2}$/;\n\nexport const validationSchema = Yup.object().shape({\n  avatar: Yup.mixed().test(\n    'fileSize',\n    'Image too large, max 3mb',\n    value => !value || (value && value.size <= 3000000)\n  ),\n  name: Yup.string().required('Name is required field'),\n  email: Yup.string()\n    .required('Email  is required field')\n    .matches(emailRegExp, 'Invalid email address'),\n  birthday: Yup.date()\n    .required('Enter a date of birth')\n    .min(new Date(1900, 0, 1))\n    .max(new Date(), \"You can't be born in the future!\"),\n  phone: Yup.string()\n    .required('Phone is required field')\n    .matches(phoneRegExp, 'Invalid phone number'),\n  city: Yup.string().required('City is required field'),\n});\n","// import { Formik, Field, ErrorMessage } from 'formik';\n// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getUser } from 'redux/auth/auth-selectors';\n// import {\n//   ButtonSave,\n//   EditIcon,\n//   EditInpuButton,\n//   IconEdit,\n//   Icon,\n//   Label,\n//   StylizedForm,\n//   Avatar,\n//   IconEditPhoto,\n//   AvatarSection,\n//   EditPhotoWrap,\n//   FormSection,\n//   ErrorMessageStyled,\n// } from './UserForm.styled';\n// import Notiflix from 'notiflix';\n// import { updateUser } from 'redux/auth/auth-operations';\n// import { validationSchema } from 'validation';\n\n// import avatarDefault2x from '../../images/profile_img/Photo_default_2x.jpg';\n\n// const UserForm = ({ isEditing, toggleEdit }) => {\n//   const dispatch = useDispatch();\n\n//   const user = useSelector(getUser);\n\n//   const [avatar, setAvatar] = useState(user.avatar || avatarDefault2x);\n//   const [name, setName] = useState(user.name || '');\n//   const [email, setEmail] = useState(user.email || '');\n//   const [birthday, setBirthday] = useState(user.birthday || '');\n//   const [phone, setPhone] = useState(user.phone || '');\n//   const [city, setCity] = useState(user.city || '');\n\n//   useEffect(() => {\n//     setAvatar(user.avatar || avatarDefault2x);\n//     setName(user.name || '');\n//     setEmail(user.email || '');\n//     setBirthday(user.birthday || '');\n//     setPhone(user.phone || '');\n//     setCity(user.city || '');\n//   }, [user]);\n\n//   // const toggleEdit = () => {\n//   //   setIsEditing(!isEditing);\n//   // };\n\n//   const handleSubmit = (values, { errors, touched }) => {\n//     // Перевіряємо, чи є помилки валідації\n//     console.log(values);\n//     const errorFields = Object.keys(errors)\n//       .filter(key => touched[key])\n//       .map(key => errors[key]);\n\n//     if (errorFields.length > 0) {\n//       // Якщо є помилки, показуємо їх\n//       Notiflix.Notify.failure(errorFields.join('\\n'));\n//     } else {\n//       // Якщо помилок немає, оновлюємо стан та диспатчимо дію\n//       setAvatar(values.avatar);\n//       setName(values.name);\n//       setEmail(values.email);\n//       setBirthday(values.birthday);\n//       setPhone(values.phone);\n//       setCity(values.city);\n\n//       dispatch(\n//         updateUser({\n//           avatar: values.avatar,\n//           name: values.name,\n//           email: values.email,\n//           birthday: values.birthday,\n//           phone: values.phone,\n//           city: values.city,\n//         })\n//       );\n//     }\n//   };\n//   // const [icon, setIcon] = React.useState(false);\n\n//   // const toggleIcon = () => {\n//   //   setIcon(prevIcon => !prevIcon);\n//   // };\n\n// return (\n//   <Formik\n//     initialValues={{\n//       avatar: avatar,\n//       name: name,\n//       email: email,\n//       birthday: birthday,\n//       phone: phone,\n//       city: city,\n//     }}\n//     onSubmit={handleSubmit}\n//     validationSchema={validationSchema}\n//   >\n//     {({ errors, touched, isSubmitting, setFieldValue }) => (\n//       <StylizedForm autoComplete=\"off\">\n//         <EditIcon>\n//           <EditInpuButton type=\"button\" onClick={toggleEdit}>\n//             {isEditing ? <Icon /> : <IconEdit />}\n//           </EditInpuButton>\n//         </EditIcon>\n//         <Label htmlFor=\"avatar\">\n//           {/* <input\n//               id=\"avatar\"\n//               name=\"avatar\"\n//               type=\"file\"\n//               onChange={event => {\n//                 setFieldValue('avatar', event.currentTarget.files[0]);\n//               }}\n//               disabled={!isEditing}\n//             /> */}\n//           <AvatarSection>\n//             <Avatar src={avatar} alt=\"avatar\" />\n//             <EditPhotoWrap style={{ border: 'none' }}>\n//               {isEditing ? (\n//                 <>\n//                   <IconEditPhoto /> <span>Edit photo</span>\n//                 </>\n//               ) : (\n//                 <>{/* <IconCheckPhoto /> <span>Confirm</span> */}</>\n//               )}\n//             </EditPhotoWrap>\n//           </AvatarSection>\n//         </Label>\n//         <FormSection>\n//           <Label htmlFor=\"name\">\n//             <span>Name:</span>\n//             <Field\n//               type=\"text\"\n//               name=\"name\"\n//               disabled={!isEditing}\n//               placeholder=\"123\"\n//             />\n//             <ErrorMessage name=\"name\" component={ErrorMessageStyled} />\n//           </Label>\n\n//           <Label htmlFor=\"email\">\n//             <span>Email:</span>\n//             <Field type=\"text\" name=\"email\" disabled={!isEditing} />\n//           </Label>\n//           <Label htmlFor=\"birthday\">\n//             <span>Birthday:</span>\n//             <Field type=\"text\" name=\"birthday\" disabled={!isEditing} />\n//           </Label>\n//           <Label htmlFor=\"birthday\">\n//             <span>Phone:</span>\n//             <Field type=\"text\" name=\"phone\" disabled={!isEditing} />\n//           </Label>\n//           <Label htmlFor=\"city\">\n//             <span>City:</span>\n//             <Field type=\"text\" name=\"city\" disabled={!isEditing} />\n//           </Label>\n//         </FormSection>\n//         {isEditing ? (\n//           <ButtonSave type=\"submit\" disabled={isSubmitting}>\n//             Save\n//           </ButtonSave>\n//         ) : null}\n//       </StylizedForm>\n//     )}\n//   </Formik>\n// );\n// };\n\n// export default UserForm;\n\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUser } from 'redux/auth/auth-selectors';\nimport {\n  ButtonSave,\n  EditIcon,\n  EditInpuButton,\n  IconEdit,\n  Icon,\n  Label,\n  StylizedForm,\n  Avatar,\n  IconEditPhoto,\n  AvatarSection,\n  EditPhotoWrap,\n  FormSection,\n  ErrorMessageStyled,\n  UserInfoWrap,\n} from './UserForm.styled';\nimport Notiflix from 'notiflix';\nimport { updateUser, updateUserAvatar } from 'redux/auth/auth-operations';\nimport { validationSchema } from 'validation';\n\nimport avatarDefault2x from '../../images/profile_img/Photo_default_2x.jpg';\n\nconst UserForm = ({ isEditing, toggleEdit }) => {\n  const user = useSelector(getUser);\n  const dispatch = useDispatch();\n\n  const [avatar, setAvatar] = useState(user.avatar || avatarDefault2x);\n  const [name, setName] = useState(user.name || '');\n  const [email, setEmail] = useState(user.email || '');\n  const [birthday, setBirthday] = useState(user.birthday || '');\n  const [phone, setPhone] = useState(user.phone || '');\n  const [city, setCity] = useState(user.city || '');\n\n  useEffect(() => {\n    setAvatar(user.avatar || avatarDefault2x);\n    setName(user.name || '');\n    setEmail(user.email || '');\n    setBirthday(user.birthday || '');\n    setPhone(user.phone || '');\n    setCity(user.city || '');\n  }, [user]);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'birthday':\n        setBirthday(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      case 'city':\n        setCity(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (values, { errors, touched }) => {\n    // Перевіряємо, чи є помилки валідації\n    const errorFields = Object.keys(errors)\n      .filter(key => touched[key])\n      .map(key => errors[key]);\n\n    if (errorFields.length > 0) {\n      // Якщо є помилки, показуємо їх\n      Notiflix.Notify.failure(errorFields.join('\\n'));\n    } else {\n      // Якщо помилок немає, оновлюємо стан та диспатчимо дію\n      dispatch(\n        updateUser({\n          avatar: values.avatar,\n          name: values.name,\n          email: values.email,\n          birthday: values.birthday,\n          phone: values.phone,\n          city: values.city,\n        })\n      );\n\n      if (values.avatar instanceof File) {\n        const formData = new FormData();\n        formData.append('avatar', values.avatar);\n        dispatch(updateUserAvatar(formData));\n      }\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        avatar: avatar,\n        name: name,\n        email: email,\n        birthday: birthday,\n        phone: phone,\n        city: city,\n      }}\n      onSubmit={handleSubmit}\n      validationSchema={validationSchema}\n      onChange={handleChange}\n    >\n      {({ errors, touched, isSubmitting, setFieldValue }) => (\n        <StylizedForm autoComplete=\"off\">\n          <EditIcon>\n            <EditInpuButton type=\"button\" onClick={toggleEdit}>\n              {isEditing ? <Icon /> : <IconEdit />}\n            </EditInpuButton>\n          </EditIcon>\n          <Label htmlFor=\"avatar\">\n            {/* <input\n              id=\"avatar\"\n              name=\"avatar\"\n              type=\"file\"\n              onChange={event => {\n                setFieldValue('avatar', event.currentTarget.files[0]);\n              }}\n              disabled={!isEditing}\n            /> */}\n            <AvatarSection>\n              <Avatar src={avatar} alt=\"avatar\" />\n              <EditPhotoWrap style={{ border: 'none' }}>\n                {isEditing ? (\n                  <>\n                    <IconEditPhoto /> <span>Edit photo</span>\n                  </>\n                ) : (\n                  <>{/* <IconCheckPhoto /> <span>Confirm</span> */}</>\n                )}\n              </EditPhotoWrap>\n            </AvatarSection>\n          </Label>\n          <UserInfoWrap>\n            <FormSection>\n              <Label htmlFor=\"name\">\n                <span>Name:</span>\n                <Field\n                  type=\"text\"\n                  name=\"name\"\n                  disabled={!isEditing}\n                  placeholder=\"Your name\"\n                />\n                <ErrorMessage name=\"name\" component={ErrorMessageStyled} />\n              </Label>\n              <Label htmlFor=\"email\">\n                <span>Email:</span>\n                <Field type=\"text\" name=\"email\" disabled={!isEditing} />\n              </Label>\n              <Label htmlFor=\"birthday\">\n                <span>Birthday:</span>\n                <Field type=\"text\" name=\"birthday\" disabled={!isEditing} />\n              </Label>\n              <Label htmlFor=\"birthday\">\n                <span>Phone:</span>\n                <Field type=\"text\" name=\"phone\" disabled={!isEditing} />\n              </Label>\n              <Label htmlFor=\"city\">\n                <span>City:</span>\n                <Field type=\"text\" name=\"city\" disabled={!isEditing} />\n              </Label>\n            </FormSection>\n            {isEditing ? (\n              <ButtonSave type=\"submit\" disabled={isSubmitting}>\n                Save\n              </ButtonSave>\n            ) : null}\n          </UserInfoWrap>\n        </StylizedForm>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserForm;\n","import styled from 'styled-components';\n\nexport const UserInfo = styled.div`\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n      display: block;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport UserForm from 'components/UserForm/UserForm';\nimport { UserInfo } from './UserData.styled';\n\nconst UserData = () => {\n  // const user = useSelector(getUser);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEdit = () => {\n    setIsEditing(!isEditing);\n  };\n\n  return (\n    <>\n      <UserInfo>\n        {/* <div>\n          <Avatar src={avatarDefault2x || avatar} alt=\"avatar\" />\n          <img\n            src={avatarDefault2x || avatar}\n            alt=\"avatar\"\n            style={{ width: '50px', height: '50px' }}\n          />\n          <div>\n            <IconEditPhoto /> <span>Edit photo</span>\n          </div>\n        </div> */}\n        <UserForm isEditing={isEditing} toggleEdit={toggleEdit} />\n      </UserInfo>\n    </>\n  );\n};\n\nexport default UserData;\n","import { styled } from 'styled-components';\n\nexport const FormTitle = styled.h2`\n  font-weight: 500;\n  font-size: ${({ theme }) => theme.fontSizes[3]};\n  line-height: 1.36;\n  letter-spacing: 0.04em;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: ${({ theme }) => theme.fontSizes[5]};\n  }\n`;\n\nexport const UserCardWrap = styled.div`\n  position: relative;\n\n  padding-top: ${({ theme }) => theme.space[2] * 5 + 'px'};\n  padding-right: ${({ theme }) => theme.space[2] * 2 + 'px'};\n  padding-bottom: ${({ theme }) => theme.space[2] * 6 + 'px'};\n  padding-left: ${({ theme }) => theme.space[2] * 2 + 'px'};\n  background: #ffffff;\n  box-shadow: ${({ theme }) => theme.boxShadows.main};\n  border-radius: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    width: 704px;\n    padding-top: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    padding-right: 76px;\n    padding-bottom: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    padding-left: ${({ theme }) => theme.space[2] * 5 + 'px'};\n    border-radius: 40px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.breakpoints.desktop}) {\n    width: 395px;\n    height: 520px;\n    padding: ${({ theme }) => theme.space[2] * 5 + 'px'};\n  }\n`;\n","import Logout from 'components/Logout/Logout';\nimport UserData from 'components/UserData/UserData';\nimport { FormTitle, UserCardWrap } from './UserPage.styled';\nimport Background from 'components/Background/Background';\nimport Container from 'components/Container/Container';\n\nconst UserPage = () => {\n  return (\n    <Container>\n      <Background />\n      <FormTitle>My information:</FormTitle>\n      <UserCardWrap>\n        <UserData />\n        <Logout />\n      </UserCardWrap>\n    </Container>\n  );\n};\n\nexport default UserPage;\n","import * as Yup from 'yup';\n\nexport const registrationValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(2, 'Name must be at least 2 characters')\n    .max(16, 'Name must be no more than 16 characters')\n    .matches(/^[A-Za-z]+$/, 'Name must contain only letters'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(6, 'Password must be at least 6 characters')\n    .max(16, 'Password must be no more than 16 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      'Must be at least one number, one lowercase and uppercase letter'\n    ),\n  confirmPassword: Yup.string()\n    .nullable()\n    .when('password', (password, schema) => {\n      return password\n        ? schema\n            .required('Password confirmation required')\n            .oneOf([Yup.ref('password')], 'Passwords must match')\n        : schema.notRequired();\n    }),\n});\n\nexport const loginValidationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .nullable()\n    .required('Required')\n    .min(6, 'Password must be at least 6 characters')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n      'Must be at least one number, one lowercase and uppercase letter'\n    ),\n});\n"],"names":["_jsx","className","css","_ref","children","concat","LogOutBtn","styled","_templateObject","_taggedTemplateLiteral","theme","fontSizes","_ref2","breakpoints","tablet","_ref3","_templateObject2","_templateObject3","IconExit","CiLogout","dispatch","useDispatch","_jsxs","type","onClick","logout","StylizedForm","Form","desktop","EditIcon","Icon","ImCross","IconEdit","FiEdit3","_templateObject4","UserInfoWrap","BsCheck2","_templateObject5","_templateObject6","EditInpuButton","_templateObject7","_ref4","space","_ref5","_ref6","ButtonSave","_templateObject8","_ref7","Label","_templateObject9","_ref8","Avatar","_templateObject10","_ref9","_ref10","IconEditPhoto","BsCamera","_templateObject11","EditPhotoWrap","_templateObject12","AvatarSection","_templateObject13","FormSection","_templateObject14","ErrorMessageStyled","_templateObject15","validationSchema","Yup","shape","avatar","test","value","size","name","required","email","matches","birthday","min","Date","max","phone","city","isEditing","toggleEdit","user","useSelector","getUser","_useState","useState","avatarDefault2x","_useState2","_slicedToArray","setAvatar","_useState3","_useState4","setName","_useState5","_useState6","setEmail","_useState7","_useState8","setBirthday","_useState9","_useState10","setPhone","_useState11","_useState12","setCity","useEffect","Formik","initialValues","onSubmit","values","errors","touched","errorFields","Object","keys","filter","key","map","length","Notiflix","join","updateUser","File","formData","FormData","append","updateUserAvatar","onChange","e","_e$target","target","isSubmitting","setFieldValue","autoComplete","htmlFor","src","alt","style","border","_Fragment","Field","disabled","placeholder","ErrorMessage","component","UserInfo","setIsEditing","UserForm","FormTitle","UserCardWrap","boxShadows","main","_ref11","_ref12","_ref13","_ref14","Container","Background","UserData","Logout","registrationValidationSchema","nullable","password","confirmPassword","when","schema","oneOf","notRequired","loginValidationSchema"],"sourceRoot":""}